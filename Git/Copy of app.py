{"cells":[{"cell_type":"code","execution_count":1,"id":"d7b93fdc","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d7b93fdc","executionInfo":{"status":"ok","timestamp":1684157168133,"user_tz":-60,"elapsed":68091,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}},"outputId":"e03980be-f324-4048-9f8c-08873e01cb18"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting pycaret\n","  Downloading pycaret-3.0.1-py3-none-any.whl (483 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m483.5/483.5 kB\u001b[0m \u001b[31m8.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting full\n","  Downloading full-0.0.3.1-py3-none-any.whl (4.1 kB)\n","Requirement already satisfied: ipython>=5.5.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (7.34.0)\n","Requirement already satisfied: ipywidgets>=7.6.5 in /usr/local/lib/python3.10/dist-packages (from pycaret) (7.7.1)\n","Requirement already satisfied: tqdm>=4.62.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (4.65.0)\n","Requirement already satisfied: numpy<1.24,>=1.21 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.22.4)\n","Requirement already satisfied: pandas<2.0.0,>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.5.3)\n","Requirement already satisfied: jinja2>=1.2 in /usr/local/lib/python3.10/dist-packages (from pycaret) (3.1.2)\n","Requirement already satisfied: scipy<2.0.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.10.1)\n","Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.2.0)\n","Requirement already satisfied: scikit-learn>=1.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.2.2)\n","Collecting pyod>=1.0.8 (from pycaret)\n","  Downloading pyod-1.0.9.tar.gz (149 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m150.0/150.0 kB\u001b[0m \u001b[31m15.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: imbalanced-learn>=0.8.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (0.10.1)\n","Collecting category-encoders>=2.4.0 (from pycaret)\n","  Downloading category_encoders-2.6.0-py2.py3-none-any.whl (81 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m81.2/81.2 kB\u001b[0m \u001b[31m10.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: lightgbm>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (3.3.5)\n","Requirement already satisfied: numba>=0.55.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (0.56.4)\n","Requirement already satisfied: requests>=2.27.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (2.27.1)\n","Requirement already satisfied: psutil>=5.9.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (5.9.5)\n","Requirement already satisfied: markupsafe>=2.0.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (2.1.2)\n","Collecting importlib-metadata>=4.12.0 (from pycaret)\n","  Downloading importlib_metadata-6.6.0-py3-none-any.whl (22 kB)\n","Requirement already satisfied: nbformat>=4.2.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (5.8.0)\n","Requirement already satisfied: cloudpickle in /usr/local/lib/python3.10/dist-packages (from pycaret) (2.2.1)\n","Collecting deprecation>=2.1.0 (from pycaret)\n","  Downloading deprecation-2.1.0-py2.py3-none-any.whl (11 kB)\n","Collecting xxhash (from pycaret)\n","  Downloading xxhash-3.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (212 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m212.5/212.5 kB\u001b[0m \u001b[31m19.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: matplotlib>=3.3.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (3.7.1)\n","Collecting scikit-plot>=0.3.7 (from pycaret)\n","  Downloading scikit_plot-0.3.7-py3-none-any.whl (33 kB)\n","Requirement already satisfied: yellowbrick>=1.4 in /usr/local/lib/python3.10/dist-packages (from pycaret) (1.5)\n","Requirement already satisfied: plotly>=5.0.0 in /usr/local/lib/python3.10/dist-packages (from pycaret) (5.13.1)\n","Collecting kaleido>=0.2.1 (from pycaret)\n","  Downloading kaleido-0.2.1-py2.py3-none-manylinux1_x86_64.whl (79.9 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m79.9/79.9 MB\u001b[0m \u001b[31m12.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting schemdraw==0.15 (from pycaret)\n","  Downloading schemdraw-0.15-py3-none-any.whl (106 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m106.8/106.8 kB\u001b[0m \u001b[31m11.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting plotly-resampler>=0.8.3.1 (from pycaret)\n","  Downloading plotly_resampler-0.8.3.2.tar.gz (46 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m46.4/46.4 kB\u001b[0m \u001b[31m4.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: statsmodels>=0.12.1 in /usr/local/lib/python3.10/dist-packages (from pycaret) (0.13.5)\n","Collecting sktime!=0.17.1,<0.17.2,>=0.16.1 (from pycaret)\n","  Downloading sktime-0.17.0-py3-none-any.whl (16.1 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m16.1/16.1 MB\u001b[0m \u001b[31m62.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting tbats>=1.1.3 (from pycaret)\n","  Downloading tbats-1.1.3-py3-none-any.whl (44 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m44.0/44.0 kB\u001b[0m \u001b[31m4.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting pmdarima!=1.8.1,<3.0.0,>=1.8.0 (from pycaret)\n","  Downloading pmdarima-2.0.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl (1.8 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.8/1.8 MB\u001b[0m \u001b[31m79.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting wurlitzer (from pycaret)\n","  Downloading wurlitzer-3.0.3-py3-none-any.whl (7.3 kB)\n","Requirement already satisfied: torch in /usr/local/lib/python3.10/dist-packages (from full) (2.0.0+cu118)\n","Collecting transformers (from full)\n","  Downloading transformers-4.29.1-py3-none-any.whl (7.1 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.1/7.1 MB\u001b[0m \u001b[31m96.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: patsy>=0.5.1 in /usr/local/lib/python3.10/dist-packages (from category-encoders>=2.4.0->pycaret) (0.5.3)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from deprecation>=2.1.0->pycaret) (23.1)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from imbalanced-learn>=0.8.1->pycaret) (3.1.0)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.10/dist-packages (from importlib-metadata>=4.12.0->pycaret) (3.15.0)\n","Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (67.7.2)\n","Collecting jedi>=0.16 (from ipython>=5.5.0->pycaret)\n","  Downloading jedi-0.18.2-py2.py3-none-any.whl (1.6 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.6/1.6 MB\u001b[0m \u001b[31m62.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: decorator in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (4.4.2)\n","Requirement already satisfied: pickleshare in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (0.7.5)\n","Requirement already satisfied: traitlets>=4.2 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (5.7.1)\n","Requirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (3.0.38)\n","Requirement already satisfied: pygments in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (2.14.0)\n","Requirement already satisfied: backcall in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (0.2.0)\n","Requirement already satisfied: matplotlib-inline in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (0.1.6)\n","Requirement already satisfied: pexpect>4.3 in /usr/local/lib/python3.10/dist-packages (from ipython>=5.5.0->pycaret) (4.8.0)\n","Requirement already satisfied: ipykernel>=4.5.1 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret) (5.5.6)\n","Requirement already satisfied: ipython-genutils~=0.2.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret) (0.2.0)\n","Requirement already satisfied: widgetsnbextension~=3.6.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret) (3.6.4)\n","Requirement already satisfied: jupyterlab-widgets>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from ipywidgets>=7.6.5->pycaret) (3.0.7)\n","Requirement already satisfied: wheel in /usr/local/lib/python3.10/dist-packages (from lightgbm>=3.0.0->pycaret) (0.40.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (1.0.7)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (4.39.3)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (1.4.4)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (8.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (3.0.9)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=3.3.0->pycaret) (2.8.2)\n","Requirement already satisfied: fastjsonschema in /usr/local/lib/python3.10/dist-packages (from nbformat>=4.2.0->pycaret) (2.16.3)\n","Requirement already satisfied: jsonschema>=2.6 in /usr/local/lib/python3.10/dist-packages (from nbformat>=4.2.0->pycaret) (4.3.3)\n","Requirement already satisfied: jupyter-core in /usr/local/lib/python3.10/dist-packages (from nbformat>=4.2.0->pycaret) (5.3.0)\n","Requirement already satisfied: llvmlite<0.40,>=0.39.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba>=0.55.0->pycaret) (0.39.1)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas<2.0.0,>=1.3.0->pycaret) (2022.7.1)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly>=5.0.0->pycaret) (8.2.2)\n","Collecting dash<3.0.0,>=2.2.0 (from plotly-resampler>=0.8.3.1->pycaret)\n","  Downloading dash-2.9.3-py3-none-any.whl (10.2 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m10.2/10.2 MB\u001b[0m \u001b[31m71.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting jupyter-dash>=0.4.2 (from plotly-resampler>=0.8.3.1->pycaret)\n","  Downloading jupyter_dash-0.4.2-py3-none-any.whl (23 kB)\n","Collecting orjson<4.0.0,>=3.8.0 (from plotly-resampler>=0.8.3.1->pycaret)\n","  Downloading orjson-3.8.12-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (137 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m137.2/137.2 kB\u001b[0m \u001b[31m14.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting trace-updater>=0.0.8 (from plotly-resampler>=0.8.3.1->pycaret)\n","  Downloading trace_updater-0.0.9.1-py3-none-any.whl (185 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m185.2/185.2 kB\u001b[0m \u001b[31m14.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: Cython!=0.29.18,!=0.29.31,>=0.29 in /usr/local/lib/python3.10/dist-packages (from pmdarima!=1.8.1,<3.0.0,>=1.8.0->pycaret) (0.29.34)\n","Requirement already satisfied: urllib3 in /usr/local/lib/python3.10/dist-packages (from pmdarima!=1.8.1,<3.0.0,>=1.8.0->pycaret) (1.26.15)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from pyod>=1.0.8->pycaret) (1.16.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->pycaret) (2022.12.7)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->pycaret) (2.0.12)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.27.1->pycaret) (3.4)\n","Collecting deprecated>=1.2.13 (from sktime!=0.17.1,<0.17.2,>=0.16.1->pycaret)\n","  Downloading Deprecated-1.2.13-py2.py3-none-any.whl (9.6 kB)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch->full) (3.12.0)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from torch->full) (4.5.0)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch->full) (1.11.1)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch->full) (3.1)\n","Requirement already satisfied: triton==2.0.0 in /usr/local/lib/python3.10/dist-packages (from torch->full) (2.0.0)\n","Requirement already satisfied: cmake in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch->full) (3.25.2)\n","Requirement already satisfied: lit in /usr/local/lib/python3.10/dist-packages (from triton==2.0.0->torch->full) (16.0.3)\n","Collecting huggingface-hub<1.0,>=0.14.1 (from transformers->full)\n","  Downloading huggingface_hub-0.14.1-py3-none-any.whl (224 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m224.5/224.5 kB\u001b[0m \u001b[31m19.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers->full) (6.0)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers->full) (2022.10.31)\n","Collecting tokenizers!=0.11.3,<0.14,>=0.11.1 (from transformers->full)\n","  Downloading tokenizers-0.13.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (7.8 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.8/7.8 MB\u001b[0m \u001b[31m64.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: Flask>=1.0.4 in /usr/local/lib/python3.10/dist-packages (from dash<3.0.0,>=2.2.0->plotly-resampler>=0.8.3.1->pycaret) (2.2.4)\n","Collecting dash-html-components==2.0.0 (from dash<3.0.0,>=2.2.0->plotly-resampler>=0.8.3.1->pycaret)\n","  Downloading dash_html_components-2.0.0-py3-none-any.whl (4.1 kB)\n","Collecting dash-core-components==2.0.0 (from dash<3.0.0,>=2.2.0->plotly-resampler>=0.8.3.1->pycaret)\n","  Downloading dash_core_components-2.0.0-py3-none-any.whl (3.8 kB)\n","Collecting dash-table==5.0.0 (from dash<3.0.0,>=2.2.0->plotly-resampler>=0.8.3.1->pycaret)\n","  Downloading dash_table-5.0.0-py3-none-any.whl (3.9 kB)\n","Requirement already satisfied: wrapt<2,>=1.10 in /usr/local/lib/python3.10/dist-packages (from deprecated>=1.2.13->sktime!=0.17.1,<0.17.2,>=0.16.1->pycaret) (1.14.1)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.14.1->transformers->full) (2023.4.0)\n","Requirement already satisfied: jupyter-client in /usr/local/lib/python3.10/dist-packages (from ipykernel>=4.5.1->ipywidgets>=7.6.5->pycaret) (6.1.12)\n","Requirement already satisfied: tornado>=4.2 in /usr/local/lib/python3.10/dist-packages (from ipykernel>=4.5.1->ipywidgets>=7.6.5->pycaret) (6.3.1)\n","Requirement already satisfied: parso<0.9.0,>=0.8.0 in /usr/local/lib/python3.10/dist-packages (from jedi>=0.16->ipython>=5.5.0->pycaret) (0.8.3)\n","Requirement already satisfied: attrs>=17.4.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat>=4.2.0->pycaret) (23.1.0)\n","Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=2.6->nbformat>=4.2.0->pycaret) (0.19.3)\n","Collecting retrying (from jupyter-dash>=0.4.2->plotly-resampler>=0.8.3.1->pycaret)\n","  Downloading retrying-1.3.4-py3-none-any.whl (11 kB)\n","Collecting ansi2html (from jupyter-dash>=0.4.2->plotly-resampler>=0.8.3.1->pycaret)\n","  Downloading ansi2html-1.8.0-py3-none-any.whl (16 kB)\n","Requirement already satisfied: nest-asyncio in /usr/local/lib/python3.10/dist-packages (from jupyter-dash>=0.4.2->plotly-resampler>=0.8.3.1->pycaret) (1.5.6)\n","Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.10/dist-packages (from pexpect>4.3->ipython>=5.5.0->pycaret) (0.7.0)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.10/dist-packages (from prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0->ipython>=5.5.0->pycaret) (0.2.6)\n","Requirement already satisfied: notebook>=4.4.1 in /usr/local/lib/python3.10/dist-packages (from widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (6.4.8)\n","Requirement already satisfied: platformdirs>=2.5 in /usr/local/lib/python3.10/dist-packages (from jupyter-core->nbformat>=4.2.0->pycaret) (3.3.0)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch->full) (1.3.0)\n","Requirement already satisfied: Werkzeug>=2.2.2 in /usr/local/lib/python3.10/dist-packages (from Flask>=1.0.4->dash<3.0.0,>=2.2.0->plotly-resampler>=0.8.3.1->pycaret) (2.3.0)\n","Requirement already satisfied: itsdangerous>=2.0 in /usr/local/lib/python3.10/dist-packages (from Flask>=1.0.4->dash<3.0.0,>=2.2.0->plotly-resampler>=0.8.3.1->pycaret) (2.1.2)\n","Requirement already satisfied: click>=8.0 in /usr/local/lib/python3.10/dist-packages (from Flask>=1.0.4->dash<3.0.0,>=2.2.0->plotly-resampler>=0.8.3.1->pycaret) (8.1.3)\n","Requirement already satisfied: pyzmq>=17 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (23.2.1)\n","Requirement already satisfied: argon2-cffi in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (21.3.0)\n","Requirement already satisfied: nbconvert in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (6.5.4)\n","Requirement already satisfied: Send2Trash>=1.8.0 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.8.0)\n","Requirement already satisfied: terminado>=0.8.3 in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.17.1)\n","Requirement already satisfied: prometheus-client in /usr/local/lib/python3.10/dist-packages (from notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.16.0)\n","Requirement already satisfied: argon2-cffi-bindings in /usr/local/lib/python3.10/dist-packages (from argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (21.2.0)\n","Requirement already satisfied: lxml in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (4.9.2)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (4.11.2)\n","Requirement already satisfied: bleach in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (6.0.0)\n","Requirement already satisfied: defusedxml in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.7.1)\n","Requirement already satisfied: entrypoints>=0.2.2 in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.4)\n","Requirement already satisfied: jupyterlab-pygments in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.2.2)\n","Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.8.4)\n","Requirement already satisfied: nbclient>=0.5.0 in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.7.4)\n","Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.5.0)\n","Requirement already satisfied: tinycss2 in /usr/local/lib/python3.10/dist-packages (from nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.2.1)\n","Requirement already satisfied: cffi>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from argon2-cffi-bindings->argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (1.15.1)\n","Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4->nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (2.4.1)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from bleach->nbconvert->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (0.5.1)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.10/dist-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi->notebook>=4.4.1->widgetsnbextension~=3.6.0->ipywidgets>=7.6.5->pycaret) (2.21)\n","Building wheels for collected packages: plotly-resampler, pyod\n","  Building wheel for plotly-resampler (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for plotly-resampler: filename=plotly_resampler-0.8.3.2-cp310-cp310-manylinux_2_31_x86_64.whl size=75239 sha256=c793e7b2896396515a858a6eb4ccbae69b895ccd03e41371c3c8b518506e769c\n","  Stored in directory: /root/.cache/pip/wheels/a9/19/e2/ec856d98cf9b617511fff0abae1dfed5bf1f6093ce65126b45\n","  Building wheel for pyod (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyod: filename=pyod-1.0.9-py3-none-any.whl size=184097 sha256=69877b5d4bef5af6c8e825c35126a47a723bfbd0f6fbf5019c2b64e7a721ad84\n","  Stored in directory: /root/.cache/pip/wheels/83/55/6b/552e083cf5509c0afe808b76cf434f1be284d01a112623bd37\n","Successfully built plotly-resampler pyod\n","Installing collected packages: trace-updater, tokenizers, kaleido, dash-table, dash-html-components, dash-core-components, xxhash, wurlitzer, schemdraw, retrying, orjson, jedi, importlib-metadata, deprecation, deprecated, ansi2html, huggingface-hub, transformers, sktime, scikit-plot, pyod, dash, pmdarima, jupyter-dash, category-encoders, tbats, plotly-resampler, pycaret, full\n","Successfully installed ansi2html-1.8.0 category-encoders-2.6.0 dash-2.9.3 dash-core-components-2.0.0 dash-html-components-2.0.0 dash-table-5.0.0 deprecated-1.2.13 deprecation-2.1.0 full-0.0.3.1 huggingface-hub-0.14.1 importlib-metadata-6.6.0 jedi-0.18.2 jupyter-dash-0.4.2 kaleido-0.2.1 orjson-3.8.12 plotly-resampler-0.8.3.2 pmdarima-2.0.3 pycaret-3.0.1 pyod-1.0.9 retrying-1.3.4 schemdraw-0.15 scikit-plot-0.3.7 sktime-0.17.0 tbats-1.1.3 tokenizers-0.13.3 trace-updater-0.0.9.1 transformers-4.29.1 wurlitzer-3.0.3 xxhash-3.2.0\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (1.5.3)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2022.7.1)\n","Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.22.4)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas) (1.16.0)\n"]}],"source":["# Import necessary libraries\n","\n","! pip install pycaret full \n","import pycaret\n","! pip install pandas\n","from pycaret.regression import *\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","execution_count":2,"id":"d69bb598","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":852},"id":"d69bb598","executionInfo":{"status":"ok","timestamp":1684157168134,"user_tz":-60,"elapsed":24,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}},"outputId":"b7a1d18f-eb99-4c33-d349-4d4a494c1151"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Micro Pollutant                     MP Category  \\\n","0            Atenolol                      β-Blockers   \n","1           Atrazine                        Herbicide   \n","2           Primidone                  Anticonvulsant   \n","3            Caffeine                       Stimulant   \n","4            Atenolol                      β-Blockers   \n","..                ...                             ...   \n","229  Sulfamethoxazole                     Antibiotics   \n","230      Trimethoprim                     Antibiotics   \n","231     Carbamazepine                  Anticonvulsant   \n","232         Ibuprofen  Nonsteroidal anti-inflammatory   \n","233        Diclofenac  Nonsteroidal anti-inflammatory   \n","\n","     Initial Concentration of MP (mg/L)  Compound MW (g/mol)  Compound Charge  \\\n","0                               0.01000               266.34                1   \n","1                               0.01000               216.00                0   \n","2                               0.01000               218.00                0   \n","3                               0.01000               194.00                0   \n","4                               0.01000               266.34                1   \n","..                                  ...                  ...              ...   \n","229                             0.01220               253.28               -1   \n","230                             0.01070               290.32                1   \n","231                             0.01370               236.27                0   \n","232                             0.01220               206.29               -1   \n","233                             0.00966               296.15               -1   \n","\n","     Initial FS pH  Initial DS pH    Type of MB  MB Contact Angle (°)  \\\n","0             7.05            NaN   HTI CTA FO                   79.5   \n","1             7.05            NaN   HTI CTA FO                   79.5   \n","2             7.05            NaN   HTI CTA FO                   79.5   \n","3             7.05            NaN   HTI CTA FO                   79.5   \n","4             7.05            NaN   HTI CTA FO                   79.5   \n","..             ...            ...           ...                   ...   \n","229           7.00            NaN  Aquaporin FO                  26.4   \n","230           7.00            NaN  Aquaporin FO                  26.4   \n","231           7.00            NaN  Aquaporin FO                  26.4   \n","232           7.00            NaN  Aquaporin FO                  26.4   \n","233           7.00            NaN  Aquaporin FO                  26.4   \n","\n","     MB Zeta Potential (mV)                 Draw Solution  DS MW (g mol-1)  \\\n","0                     -6.87  Monoammonium phosphate (MAP)           115.00   \n","1                     -6.87  Monoammonium phosphate (MAP)           115.00   \n","2                     -6.87  Monoammonium phosphate (MAP)           115.00   \n","3                     -6.87  Monoammonium phosphate (MAP)           115.00   \n","4                     -6.87  Monoammonium phosphate (MAP)           115.00   \n","..                      ...                           ...              ...   \n","229                     NaN                          NaCl            58.44   \n","230                     NaN                          NaCl            58.44   \n","231                     NaN                          NaCl            58.44   \n","232                     NaN                          NaCl            58.44   \n","233                     NaN                          NaCl            58.44   \n","\n","     DS Concentration (M)  Operating Time (h)  Cross Flow Velocity (cm/s)  \\\n","0                     1.0                10.0                         8.5   \n","1                     1.0                10.0                         8.5   \n","2                     1.0                10.0                         8.5   \n","3                     1.0                10.0                         8.5   \n","4                     2.0                10.0                         8.5   \n","..                    ...                 ...                         ...   \n","229                   0.7                 2.5                        17.5   \n","230                   0.7                 2.5                        17.5   \n","231                   0.7                 2.5                        17.5   \n","232                   0.7                 2.5                        17.5   \n","233                   0.7                 2.5                        17.5   \n","\n","     Water Flux, Jw (LMH)  Reverse Salt Flux, Js (gMH)  Temperature (⁰C)  \\\n","0                     7.7                         0.08              20.0   \n","1                     7.7                         0.08              20.0   \n","2                     7.7                         0.08              20.0   \n","3                     7.7                         0.08              20.0   \n","4                     9.5                         0.08              20.0   \n","..                    ...                          ...               ...   \n","229                  10.0                         2.00              20.0   \n","230                  10.0                         2.00              20.0   \n","231                  10.0                         2.00              20.0   \n","232                  10.0                         2.00              20.0   \n","233                  10.0                         2.00              20.0   \n","\n","     Removal Rate (%)  \n","0                  80  \n","1                  77  \n","2                  90  \n","3                  81  \n","4                  80  \n","..                ...  \n","229               100  \n","230                99  \n","231               100  \n","232               100  \n","233                99  \n","\n","[234 rows x 19 columns]"],"text/html":["\n","  <div id=\"df-cd1f4b7f-9a4a-490e-9145-474275ffb94a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Micro Pollutant</th>\n","      <th>MP Category</th>\n","      <th>Initial Concentration of MP (mg/L)</th>\n","      <th>Compound MW (g/mol)</th>\n","      <th>Compound Charge</th>\n","      <th>Initial FS pH</th>\n","      <th>Initial DS pH</th>\n","      <th>Type of MB</th>\n","      <th>MB Contact Angle (°)</th>\n","      <th>MB Zeta Potential (mV)</th>\n","      <th>Draw Solution</th>\n","      <th>DS MW (g mol-1)</th>\n","      <th>DS Concentration (M)</th>\n","      <th>Operating Time (h)</th>\n","      <th>Cross Flow Velocity (cm/s)</th>\n","      <th>Water Flux, Jw (LMH)</th>\n","      <th>Reverse Salt Flux, Js (gMH)</th>\n","      <th>Temperature (⁰C)</th>\n","      <th>Removal Rate (%)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Atenolol</td>\n","      <td>β-Blockers</td>\n","      <td>0.01000</td>\n","      <td>266.34</td>\n","      <td>1</td>\n","      <td>7.05</td>\n","      <td>NaN</td>\n","      <td>HTI CTA FO</td>\n","      <td>79.5</td>\n","      <td>-6.87</td>\n","      <td>Monoammonium phosphate (MAP)</td>\n","      <td>115.00</td>\n","      <td>1.0</td>\n","      <td>10.0</td>\n","      <td>8.5</td>\n","      <td>7.7</td>\n","      <td>0.08</td>\n","      <td>20.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Atrazine</td>\n","      <td>Herbicide</td>\n","      <td>0.01000</td>\n","      <td>216.00</td>\n","      <td>0</td>\n","      <td>7.05</td>\n","      <td>NaN</td>\n","      <td>HTI CTA FO</td>\n","      <td>79.5</td>\n","      <td>-6.87</td>\n","      <td>Monoammonium phosphate (MAP)</td>\n","      <td>115.00</td>\n","      <td>1.0</td>\n","      <td>10.0</td>\n","      <td>8.5</td>\n","      <td>7.7</td>\n","      <td>0.08</td>\n","      <td>20.0</td>\n","      <td>77</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Primidone</td>\n","      <td>Anticonvulsant</td>\n","      <td>0.01000</td>\n","      <td>218.00</td>\n","      <td>0</td>\n","      <td>7.05</td>\n","      <td>NaN</td>\n","      <td>HTI CTA FO</td>\n","      <td>79.5</td>\n","      <td>-6.87</td>\n","      <td>Monoammonium phosphate (MAP)</td>\n","      <td>115.00</td>\n","      <td>1.0</td>\n","      <td>10.0</td>\n","      <td>8.5</td>\n","      <td>7.7</td>\n","      <td>0.08</td>\n","      <td>20.0</td>\n","      <td>90</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Caffeine</td>\n","      <td>Stimulant</td>\n","      <td>0.01000</td>\n","      <td>194.00</td>\n","      <td>0</td>\n","      <td>7.05</td>\n","      <td>NaN</td>\n","      <td>HTI CTA FO</td>\n","      <td>79.5</td>\n","      <td>-6.87</td>\n","      <td>Monoammonium phosphate (MAP)</td>\n","      <td>115.00</td>\n","      <td>1.0</td>\n","      <td>10.0</td>\n","      <td>8.5</td>\n","      <td>7.7</td>\n","      <td>0.08</td>\n","      <td>20.0</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Atenolol</td>\n","      <td>β-Blockers</td>\n","      <td>0.01000</td>\n","      <td>266.34</td>\n","      <td>1</td>\n","      <td>7.05</td>\n","      <td>NaN</td>\n","      <td>HTI CTA FO</td>\n","      <td>79.5</td>\n","      <td>-6.87</td>\n","      <td>Monoammonium phosphate (MAP)</td>\n","      <td>115.00</td>\n","      <td>2.0</td>\n","      <td>10.0</td>\n","      <td>8.5</td>\n","      <td>9.5</td>\n","      <td>0.08</td>\n","      <td>20.0</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>229</th>\n","      <td>Sulfamethoxazole</td>\n","      <td>Antibiotics</td>\n","      <td>0.01220</td>\n","      <td>253.28</td>\n","      <td>-1</td>\n","      <td>7.00</td>\n","      <td>NaN</td>\n","      <td>Aquaporin FO</td>\n","      <td>26.4</td>\n","      <td>NaN</td>\n","      <td>NaCl</td>\n","      <td>58.44</td>\n","      <td>0.7</td>\n","      <td>2.5</td>\n","      <td>17.5</td>\n","      <td>10.0</td>\n","      <td>2.00</td>\n","      <td>20.0</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>230</th>\n","      <td>Trimethoprim</td>\n","      <td>Antibiotics</td>\n","      <td>0.01070</td>\n","      <td>290.32</td>\n","      <td>1</td>\n","      <td>7.00</td>\n","      <td>NaN</td>\n","      <td>Aquaporin FO</td>\n","      <td>26.4</td>\n","      <td>NaN</td>\n","      <td>NaCl</td>\n","      <td>58.44</td>\n","      <td>0.7</td>\n","      <td>2.5</td>\n","      <td>17.5</td>\n","      <td>10.0</td>\n","      <td>2.00</td>\n","      <td>20.0</td>\n","      <td>99</td>\n","    </tr>\n","    <tr>\n","      <th>231</th>\n","      <td>Carbamazepine</td>\n","      <td>Anticonvulsant</td>\n","      <td>0.01370</td>\n","      <td>236.27</td>\n","      <td>0</td>\n","      <td>7.00</td>\n","      <td>NaN</td>\n","      <td>Aquaporin FO</td>\n","      <td>26.4</td>\n","      <td>NaN</td>\n","      <td>NaCl</td>\n","      <td>58.44</td>\n","      <td>0.7</td>\n","      <td>2.5</td>\n","      <td>17.5</td>\n","      <td>10.0</td>\n","      <td>2.00</td>\n","      <td>20.0</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>232</th>\n","      <td>Ibuprofen</td>\n","      <td>Nonsteroidal anti-inflammatory</td>\n","      <td>0.01220</td>\n","      <td>206.29</td>\n","      <td>-1</td>\n","      <td>7.00</td>\n","      <td>NaN</td>\n","      <td>Aquaporin FO</td>\n","      <td>26.4</td>\n","      <td>NaN</td>\n","      <td>NaCl</td>\n","      <td>58.44</td>\n","      <td>0.7</td>\n","      <td>2.5</td>\n","      <td>17.5</td>\n","      <td>10.0</td>\n","      <td>2.00</td>\n","      <td>20.0</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>233</th>\n","      <td>Diclofenac</td>\n","      <td>Nonsteroidal anti-inflammatory</td>\n","      <td>0.00966</td>\n","      <td>296.15</td>\n","      <td>-1</td>\n","      <td>7.00</td>\n","      <td>NaN</td>\n","      <td>Aquaporin FO</td>\n","      <td>26.4</td>\n","      <td>NaN</td>\n","      <td>NaCl</td>\n","      <td>58.44</td>\n","      <td>0.7</td>\n","      <td>2.5</td>\n","      <td>17.5</td>\n","      <td>10.0</td>\n","      <td>2.00</td>\n","      <td>20.0</td>\n","      <td>99</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>234 rows × 19 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd1f4b7f-9a4a-490e-9145-474275ffb94a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cd1f4b7f-9a4a-490e-9145-474275ffb94a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cd1f4b7f-9a4a-490e-9145-474275ffb94a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}],"source":["# Import dataset & choosing desired parameters to analyze\n","df = pd.read_csv(\"Database.csv\")\n","df = df[['Micro Pollutant', 'MP Category', 'Initial Concentration of MP (mg/L)', 'Compound MW (g/mol)', 'Compound Charge', 'Initial FS pH', 'Initial DS pH','Type of MB', 'MB Contact Angle (°)', 'MB Zeta Potential (mV)', 'Draw Solution', 'DS MW (g mol-1)', 'DS Concentration (M)', 'Operating Time (h)', 'Cross Flow Velocity (cm/s)','Water Flux, Jw (LMH)','Reverse Salt Flux, Js (gMH)','Temperature (⁰C)', 'Removal Rate (%)']]\n","df"]},{"cell_type":"code","execution_count":3,"id":"bef06290","metadata":{"id":"bef06290","outputId":"2072b748-bb40-43f4-85d6-b87f84d08d85","colab":{"base_uri":"https://localhost:8080/","height":379},"executionInfo":{"status":"ok","timestamp":1684157168135,"user_tz":-60,"elapsed":23,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Initial Concentration of MP (mg/L)  Compound MW (g/mol)  \\\n","count                        2.240000e+02           234.000000   \n","mean                         4.879809e-02           260.479060   \n","std                          2.019484e-01           133.521286   \n","min                          5.000000e-07            74.000000   \n","25%                          7.500000e-04           194.200000   \n","50%                          9.660000e-03           249.090000   \n","75%                          1.000000e-02           277.400000   \n","max                          1.266500e+00           821.140000   \n","\n","       Compound Charge  Initial FS pH  Initial DS pH  MB Contact Angle (°)  \\\n","count       234.000000     234.000000      55.000000            234.000000   \n","mean          0.064103       6.789744       7.189091             55.359829   \n","std           0.578731       0.646003       0.343011             17.638852   \n","min          -1.000000       6.000000       7.000000             26.400000   \n","25%           0.000000       6.000000       7.000000             43.800000   \n","50%           0.000000       7.000000       7.000000             64.000000   \n","75%           0.000000       7.050000       7.000000             64.000000   \n","max           1.000000       8.000000       7.800000             79.500000   \n","\n","       MB Zeta Potential (mV)  DS MW (g mol-1)  DS Concentration (M)  \\\n","count              165.000000       234.000000            221.000000   \n","mean               -11.484121        90.669487              1.155656   \n","std                 15.662298        85.733062              0.585528   \n","min                -55.000000        58.440000              0.500000   \n","25%                 -8.000000        58.440000              0.700000   \n","50%                 -6.000000        58.440000              1.000000   \n","75%                 -2.740000        74.600000              2.000000   \n","max                 -2.740000       430.180000              2.000000   \n","\n","       Operating Time (h)  Cross Flow Velocity (cm/s)  Water Flux, Jw (LMH)  \\\n","count          234.000000                  221.000000            234.000000   \n","mean            21.224359                   10.827602              9.391026   \n","std             19.287354                    8.429575              3.958994   \n","min              2.500000                    1.300000              4.000000   \n","25%             10.000000                    8.500000              6.000000   \n","50%             24.000000                    9.000000              9.460000   \n","75%             25.000000                    9.000000             11.010000   \n","max             96.000000                   58.800000             27.500000   \n","\n","       Reverse Salt Flux, Js (gMH)  Temperature (⁰C)  Removal Rate (%)  \n","count                   221.000000        228.000000        234.000000  \n","mean                      3.623258         21.429825         82.226496  \n","std                       2.753642          1.347010         23.953907  \n","min                       0.070000         20.000000          4.000000  \n","25%                       1.100000         20.000000         79.250000  \n","50%                       3.500000         21.000000         92.500000  \n","75%                       5.500000         22.500000         98.000000  \n","max                       8.500000         24.000000        100.000000  "],"text/html":["\n","  <div id=\"df-da092327-7e96-4d84-a89d-c6418f8c7e8e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Initial Concentration of MP (mg/L)</th>\n","      <th>Compound MW (g/mol)</th>\n","      <th>Compound Charge</th>\n","      <th>Initial FS pH</th>\n","      <th>Initial DS pH</th>\n","      <th>MB Contact Angle (°)</th>\n","      <th>MB Zeta Potential (mV)</th>\n","      <th>DS MW (g mol-1)</th>\n","      <th>DS Concentration (M)</th>\n","      <th>Operating Time (h)</th>\n","      <th>Cross Flow Velocity (cm/s)</th>\n","      <th>Water Flux, Jw (LMH)</th>\n","      <th>Reverse Salt Flux, Js (gMH)</th>\n","      <th>Temperature (⁰C)</th>\n","      <th>Removal Rate (%)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>2.240000e+02</td>\n","      <td>234.000000</td>\n","      <td>234.000000</td>\n","      <td>234.000000</td>\n","      <td>55.000000</td>\n","      <td>234.000000</td>\n","      <td>165.000000</td>\n","      <td>234.000000</td>\n","      <td>221.000000</td>\n","      <td>234.000000</td>\n","      <td>221.000000</td>\n","      <td>234.000000</td>\n","      <td>221.000000</td>\n","      <td>228.000000</td>\n","      <td>234.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>4.879809e-02</td>\n","      <td>260.479060</td>\n","      <td>0.064103</td>\n","      <td>6.789744</td>\n","      <td>7.189091</td>\n","      <td>55.359829</td>\n","      <td>-11.484121</td>\n","      <td>90.669487</td>\n","      <td>1.155656</td>\n","      <td>21.224359</td>\n","      <td>10.827602</td>\n","      <td>9.391026</td>\n","      <td>3.623258</td>\n","      <td>21.429825</td>\n","      <td>82.226496</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2.019484e-01</td>\n","      <td>133.521286</td>\n","      <td>0.578731</td>\n","      <td>0.646003</td>\n","      <td>0.343011</td>\n","      <td>17.638852</td>\n","      <td>15.662298</td>\n","      <td>85.733062</td>\n","      <td>0.585528</td>\n","      <td>19.287354</td>\n","      <td>8.429575</td>\n","      <td>3.958994</td>\n","      <td>2.753642</td>\n","      <td>1.347010</td>\n","      <td>23.953907</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>5.000000e-07</td>\n","      <td>74.000000</td>\n","      <td>-1.000000</td>\n","      <td>6.000000</td>\n","      <td>7.000000</td>\n","      <td>26.400000</td>\n","      <td>-55.000000</td>\n","      <td>58.440000</td>\n","      <td>0.500000</td>\n","      <td>2.500000</td>\n","      <td>1.300000</td>\n","      <td>4.000000</td>\n","      <td>0.070000</td>\n","      <td>20.000000</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>7.500000e-04</td>\n","      <td>194.200000</td>\n","      <td>0.000000</td>\n","      <td>6.000000</td>\n","      <td>7.000000</td>\n","      <td>43.800000</td>\n","      <td>-8.000000</td>\n","      <td>58.440000</td>\n","      <td>0.700000</td>\n","      <td>10.000000</td>\n","      <td>8.500000</td>\n","      <td>6.000000</td>\n","      <td>1.100000</td>\n","      <td>20.000000</td>\n","      <td>79.250000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>9.660000e-03</td>\n","      <td>249.090000</td>\n","      <td>0.000000</td>\n","      <td>7.000000</td>\n","      <td>7.000000</td>\n","      <td>64.000000</td>\n","      <td>-6.000000</td>\n","      <td>58.440000</td>\n","      <td>1.000000</td>\n","      <td>24.000000</td>\n","      <td>9.000000</td>\n","      <td>9.460000</td>\n","      <td>3.500000</td>\n","      <td>21.000000</td>\n","      <td>92.500000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000e-02</td>\n","      <td>277.400000</td>\n","      <td>0.000000</td>\n","      <td>7.050000</td>\n","      <td>7.000000</td>\n","      <td>64.000000</td>\n","      <td>-2.740000</td>\n","      <td>74.600000</td>\n","      <td>2.000000</td>\n","      <td>25.000000</td>\n","      <td>9.000000</td>\n","      <td>11.010000</td>\n","      <td>5.500000</td>\n","      <td>22.500000</td>\n","      <td>98.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.266500e+00</td>\n","      <td>821.140000</td>\n","      <td>1.000000</td>\n","      <td>8.000000</td>\n","      <td>7.800000</td>\n","      <td>79.500000</td>\n","      <td>-2.740000</td>\n","      <td>430.180000</td>\n","      <td>2.000000</td>\n","      <td>96.000000</td>\n","      <td>58.800000</td>\n","      <td>27.500000</td>\n","      <td>8.500000</td>\n","      <td>24.000000</td>\n","      <td>100.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da092327-7e96-4d84-a89d-c6418f8c7e8e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-da092327-7e96-4d84-a89d-c6418f8c7e8e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-da092327-7e96-4d84-a89d-c6418f8c7e8e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}],"source":["# Exploratory Data Analysis (EDA)\n","# Describing main statistical features of parameters in dataset\n","df.describe()"]},{"cell_type":"code","execution_count":4,"id":"5d11d825","metadata":{"id":"5d11d825","outputId":"161aa3a7-6bad-47ea-f13a-0ede867c1b80","colab":{"base_uri":"https://localhost:8080/","height":165},"executionInfo":{"status":"error","timestamp":1684157168135,"user_tz":-60,"elapsed":22,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-4762554ef19e>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdesc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'describe.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'desc' is not defined"]}],"source":["desc.to_csv('describe.csv')"]},{"cell_type":"code","execution_count":null,"id":"a4786da0","metadata":{"id":"a4786da0","executionInfo":{"status":"aborted","timestamp":1684157168136,"user_tz":-60,"elapsed":21,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":["df.dtypes"]},{"cell_type":"code","execution_count":null,"id":"58762811","metadata":{"id":"58762811","executionInfo":{"status":"aborted","timestamp":1684157168136,"user_tz":-60,"elapsed":21,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":["# EDA: Different micro pollutant categories observed \n","sns.set(font_scale=1)\n","ax=sns.catplot(x='MP Category' ,kind=\"count\",data=df)\n","\n","plt.xticks(rotation=90)\n","plt.yticks(rotation=90)\n","plt.figure(figsize=(25,25))\n"]},{"cell_type":"code","execution_count":null,"id":"96e0a675","metadata":{"id":"96e0a675","executionInfo":{"status":"aborted","timestamp":1684157168137,"user_tz":-60,"elapsed":22,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"id":"aa031839","metadata":{"id":"aa031839","executionInfo":{"status":"aborted","timestamp":1684157168137,"user_tz":-60,"elapsed":21,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":["plt.figure(figsize=(25,25))\n","sns.catplot(x='Micro Pollutant',kind=\"count\", data=df)\n","ax = plt.gca()\n","ax.set_xticklabels(ax.get_xticklabels(), rotation=180)\n","\n"]},{"cell_type":"code","execution_count":null,"id":"24ad1c7f","metadata":{"id":"24ad1c7f","executionInfo":{"status":"aborted","timestamp":1684157168137,"user_tz":-60,"elapsed":21,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":[]},{"cell_type":"code","execution_count":6,"id":"110f3279","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":788},"id":"110f3279","executionInfo":{"status":"ok","timestamp":1684157241511,"user_tz":-60,"elapsed":7063,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}},"outputId":"5acb17a0-1a0d-4741-aa39-2523819d4ed1"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7f3ffc2b5330>"],"text/html":["<style type=\"text/css\">\n","#T_47f56_row10_col1 {\n","  background-color: lightgreen;\n","}\n","</style>\n","<table id=\"T_47f56\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_47f56_level0_col0\" class=\"col_heading level0 col0\" >Description</th>\n","      <th id=\"T_47f56_level0_col1\" class=\"col_heading level0 col1\" >Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_47f56_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n","      <td id=\"T_47f56_row0_col0\" class=\"data row0 col0\" >Session id</td>\n","      <td id=\"T_47f56_row0_col1\" class=\"data row0 col1\" >123</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n","      <td id=\"T_47f56_row1_col0\" class=\"data row1 col0\" >Target</td>\n","      <td id=\"T_47f56_row1_col1\" class=\"data row1 col1\" >Water Flux, Jw (LMH)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n","      <td id=\"T_47f56_row2_col0\" class=\"data row2 col0\" >Target type</td>\n","      <td id=\"T_47f56_row2_col1\" class=\"data row2 col1\" >Regression</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n","      <td id=\"T_47f56_row3_col0\" class=\"data row3 col0\" >Original data shape</td>\n","      <td id=\"T_47f56_row3_col1\" class=\"data row3 col1\" >(234, 17)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n","      <td id=\"T_47f56_row4_col0\" class=\"data row4 col0\" >Transformed data shape</td>\n","      <td id=\"T_47f56_row4_col1\" class=\"data row4 col1\" >(234, 48)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n","      <td id=\"T_47f56_row5_col0\" class=\"data row5 col0\" >Transformed train set shape</td>\n","      <td id=\"T_47f56_row5_col1\" class=\"data row5 col1\" >(163, 48)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n","      <td id=\"T_47f56_row6_col0\" class=\"data row6 col0\" >Transformed test set shape</td>\n","      <td id=\"T_47f56_row6_col1\" class=\"data row6 col1\" >(71, 48)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n","      <td id=\"T_47f56_row7_col0\" class=\"data row7 col0\" >Numeric features</td>\n","      <td id=\"T_47f56_row7_col1\" class=\"data row7 col1\" >12</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n","      <td id=\"T_47f56_row8_col0\" class=\"data row8 col0\" >Categorical features</td>\n","      <td id=\"T_47f56_row8_col1\" class=\"data row8 col1\" >4</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n","      <td id=\"T_47f56_row9_col0\" class=\"data row9 col0\" >Rows with missing values</td>\n","      <td id=\"T_47f56_row9_col1\" class=\"data row9 col1\" >12.4%</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n","      <td id=\"T_47f56_row10_col0\" class=\"data row10 col0\" >Preprocess</td>\n","      <td id=\"T_47f56_row10_col1\" class=\"data row10 col1\" >True</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n","      <td id=\"T_47f56_row11_col0\" class=\"data row11 col0\" >Imputation type</td>\n","      <td id=\"T_47f56_row11_col1\" class=\"data row11 col1\" >simple</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n","      <td id=\"T_47f56_row12_col0\" class=\"data row12 col0\" >Numeric imputation</td>\n","      <td id=\"T_47f56_row12_col1\" class=\"data row12 col1\" >mean</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n","      <td id=\"T_47f56_row13_col0\" class=\"data row13 col0\" >Categorical imputation</td>\n","      <td id=\"T_47f56_row13_col1\" class=\"data row13 col1\" >mode</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n","      <td id=\"T_47f56_row14_col0\" class=\"data row14 col0\" >Maximum one-hot encoding</td>\n","      <td id=\"T_47f56_row14_col1\" class=\"data row14 col1\" >25</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row15\" class=\"row_heading level0 row15\" >15</th>\n","      <td id=\"T_47f56_row15_col0\" class=\"data row15 col0\" >Encoding method</td>\n","      <td id=\"T_47f56_row15_col1\" class=\"data row15 col1\" >None</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row16\" class=\"row_heading level0 row16\" >16</th>\n","      <td id=\"T_47f56_row16_col0\" class=\"data row16 col0\" >Fold Generator</td>\n","      <td id=\"T_47f56_row16_col1\" class=\"data row16 col1\" >KFold</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row17\" class=\"row_heading level0 row17\" >17</th>\n","      <td id=\"T_47f56_row17_col0\" class=\"data row17 col0\" >Fold Number</td>\n","      <td id=\"T_47f56_row17_col1\" class=\"data row17 col1\" >10</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row18\" class=\"row_heading level0 row18\" >18</th>\n","      <td id=\"T_47f56_row18_col0\" class=\"data row18 col0\" >CPU Jobs</td>\n","      <td id=\"T_47f56_row18_col1\" class=\"data row18 col1\" >-1</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row19\" class=\"row_heading level0 row19\" >19</th>\n","      <td id=\"T_47f56_row19_col0\" class=\"data row19 col0\" >Use GPU</td>\n","      <td id=\"T_47f56_row19_col1\" class=\"data row19 col1\" >False</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row20\" class=\"row_heading level0 row20\" >20</th>\n","      <td id=\"T_47f56_row20_col0\" class=\"data row20 col0\" >Log Experiment</td>\n","      <td id=\"T_47f56_row20_col1\" class=\"data row20 col1\" >False</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row21\" class=\"row_heading level0 row21\" >21</th>\n","      <td id=\"T_47f56_row21_col0\" class=\"data row21 col0\" >Experiment Name</td>\n","      <td id=\"T_47f56_row21_col1\" class=\"data row21 col1\" >reg-default-name</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_47f56_level0_row22\" class=\"row_heading level0 row22\" >22</th>\n","      <td id=\"T_47f56_row22_col0\" class=\"data row22 col0\" >USI</td>\n","      <td id=\"T_47f56_row22_col1\" class=\"data row22 col1\" >d2ec</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["<pycaret.regression.oop.RegressionExperiment at 0x7f400e63b220>"]},"metadata":{},"execution_count":6}],"source":["# Setting up the model by choosing water flux (Jw) as the prediction target\n","\n","setup(data = df,target = 'Water Flux, Jw (LMH)',session_id = 123)"]},{"cell_type":"code","execution_count":null,"id":"2908376c","metadata":{"id":"2908376c","executionInfo":{"status":"aborted","timestamp":1684157168138,"user_tz":-60,"elapsed":22,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":["# Plotting correlation between parameters in dataset\n","\n","plt.figure(figsize=(25,25))\n","my_correlation = df.corr()\n","sns.heatmap(my_correlation,annot=True, cmap='coolwarm',annot_kws={\"size\": 16})\n","ax = plt.gca()\n","ax.tick_params(axis='x', labelsize=20)\n","ax.tick_params(axis='y', labelsize=20)\n","ax.set_xticklabels(ax.get_xticklabels(), rotation=90)\n","ax.set_yticklabels(ax.get_yticklabels(), rotation=360)\n","cbar = plt.gcf().axes[-1]\n","cbar.tick_params(labelsize=16)\n"]},{"cell_type":"code","execution_count":5,"id":"cf4e852e","metadata":{"id":"cf4e852e","executionInfo":{"status":"ok","timestamp":1684157219469,"user_tz":-60,"elapsed":591,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":["# Refining the dataset removing inputs with very hitg correlation\n","\n","df = df[['Micro Pollutant', 'MP Category', 'Initial Concentration of MP (mg/L)', 'Compound MW (g/mol)', 'Compound Charge', 'Initial FS pH','Type of MB', 'MB Contact Angle (°)', 'Draw Solution', 'DS MW (g mol-1)', 'DS Concentration (M)', 'Operating Time (h)', 'Cross Flow Velocity (cm/s)','Water Flux, Jw (LMH)','Reverse Salt Flux, Js (gMH)','Temperature (⁰C)', 'Removal Rate (%)']]\n","\n"]},{"cell_type":"code","execution_count":null,"id":"61ebc2c0","metadata":{"id":"61ebc2c0","executionInfo":{"status":"aborted","timestamp":1684157168139,"user_tz":-60,"elapsed":23,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":["plt.figure(figsize=(25,25))\n","my_correlation = df.corr()\n","sns.heatmap(my_correlation,annot=True, cmap='coolwarm',annot_kws={\"size\": 16})\n","ax = plt.gca()\n","ax.tick_params(axis='x', labelsize=20)\n","ax.tick_params(axis='y', labelsize=20)\n","ax.set_xticklabels(ax.get_xticklabels(), rotation=90)\n","ax.set_yticklabels(ax.get_yticklabels(), rotation=360)\n","cbar = plt.gcf().axes[-1]\n","cbar.tick_params(labelsize=16)"]},{"cell_type":"code","execution_count":null,"id":"c57cb200","metadata":{"id":"c57cb200","executionInfo":{"status":"aborted","timestamp":1684157168140,"user_tz":-60,"elapsed":24,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":["df"]},{"cell_type":"code","execution_count":null,"id":"99255976","metadata":{"scrolled":false,"id":"99255976","executionInfo":{"status":"aborted","timestamp":1684157168141,"user_tz":-60,"elapsed":25,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":["eda()"]},{"cell_type":"code","execution_count":null,"id":"188c6c9d","metadata":{"id":"188c6c9d","executionInfo":{"status":"aborted","timestamp":1684157168141,"user_tz":-60,"elapsed":25,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":["df.groupby('Type of MB').count()\n"]},{"cell_type":"code","execution_count":null,"id":"d88dedc5","metadata":{"scrolled":true,"id":"d88dedc5","executionInfo":{"status":"aborted","timestamp":1684157168142,"user_tz":-60,"elapsed":25,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":["# One-hot encoding categorical parameters for ML\n","\n","MP=pd.get_dummies(df['Micro Pollutant'])\n","MP_Cat=pd.get_dummies(df['MP Category'])\n","MB=pd.get_dummies(df['Type of MB'])\n","DS=pd.get_dummies(df['Draw Solution'])\n","df = pd.concat([df,MP,MP_Cat, MB,DS],axis=1)\n","df"]},{"cell_type":"code","execution_count":null,"id":"f65d3b99","metadata":{"id":"f65d3b99","executionInfo":{"status":"aborted","timestamp":1684157168142,"user_tz":-60,"elapsed":25,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":["df.to_csv('modified_dataset.csv')\n"]},{"cell_type":"code","execution_count":null,"id":"a04d0835","metadata":{"id":"a04d0835","executionInfo":{"status":"aborted","timestamp":1684157168142,"user_tz":-60,"elapsed":25,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":["# Auto ML using PyCaret with all regression models available\n","\n","best = compare_models() "]},{"cell_type":"code","execution_count":7,"id":"5854b719","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457,"referenced_widgets":["d9667e2eac2240c0b673555323c894ee","4e17f15bb2b34318ad90c6996d354c42","2abb000c93f447ecb815fe2a55942901","383e197970fe4cbcb3622364add288fc","12e0b4c8f9234a4f97f179c0f16e9322","0a698acddf4a4e38868d8d3126aeedca","3263746d203c471e8683fae5e61f75ea","5f1c700a1aa94effa9f70bc6e7ee3bb8","65bc9b4b6c8542e6a81ba4bf4f7adee2","72043642b86a4c5d931c4d546350c228","d88df7bfaf464268b5533b0ee5018b37"]},"id":"5854b719","executionInfo":{"status":"ok","timestamp":1684157257398,"user_tz":-60,"elapsed":9744,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}},"outputId":"d2690fba-77f2-4684-8bcd-3ae8405d4c26"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7f3ffc2b4f40>"],"text/html":["<style type=\"text/css\">\n","#T_84993_row10_col0, #T_84993_row10_col1, #T_84993_row10_col2, #T_84993_row10_col3, #T_84993_row10_col4, #T_84993_row10_col5 {\n","  background: yellow;\n","}\n","</style>\n","<table id=\"T_84993\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_84993_level0_col0\" class=\"col_heading level0 col0\" >MAE</th>\n","      <th id=\"T_84993_level0_col1\" class=\"col_heading level0 col1\" >MSE</th>\n","      <th id=\"T_84993_level0_col2\" class=\"col_heading level0 col2\" >RMSE</th>\n","      <th id=\"T_84993_level0_col3\" class=\"col_heading level0 col3\" >R2</th>\n","      <th id=\"T_84993_level0_col4\" class=\"col_heading level0 col4\" >RMSLE</th>\n","      <th id=\"T_84993_level0_col5\" class=\"col_heading level0 col5\" >MAPE</th>\n","    </tr>\n","    <tr>\n","      <th class=\"index_name level0\" >Fold</th>\n","      <th class=\"blank col0\" >&nbsp;</th>\n","      <th class=\"blank col1\" >&nbsp;</th>\n","      <th class=\"blank col2\" >&nbsp;</th>\n","      <th class=\"blank col3\" >&nbsp;</th>\n","      <th class=\"blank col4\" >&nbsp;</th>\n","      <th class=\"blank col5\" >&nbsp;</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_84993_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n","      <td id=\"T_84993_row0_col0\" class=\"data row0 col0\" >0.5288</td>\n","      <td id=\"T_84993_row0_col1\" class=\"data row0 col1\" >1.2347</td>\n","      <td id=\"T_84993_row0_col2\" class=\"data row0 col2\" >1.1112</td>\n","      <td id=\"T_84993_row0_col3\" class=\"data row0 col3\" >0.9484</td>\n","      <td id=\"T_84993_row0_col4\" class=\"data row0 col4\" >0.0901</td>\n","      <td id=\"T_84993_row0_col5\" class=\"data row0 col5\" >0.0518</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_84993_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n","      <td id=\"T_84993_row1_col0\" class=\"data row1 col0\" >0.2557</td>\n","      <td id=\"T_84993_row1_col1\" class=\"data row1 col1\" >0.1257</td>\n","      <td id=\"T_84993_row1_col2\" class=\"data row1 col2\" >0.3546</td>\n","      <td id=\"T_84993_row1_col3\" class=\"data row1 col3\" >0.9828</td>\n","      <td id=\"T_84993_row1_col4\" class=\"data row1 col4\" >0.0548</td>\n","      <td id=\"T_84993_row1_col5\" class=\"data row1 col5\" >0.0435</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_84993_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n","      <td id=\"T_84993_row2_col0\" class=\"data row2 col0\" >0.4993</td>\n","      <td id=\"T_84993_row2_col1\" class=\"data row2 col1\" >0.4433</td>\n","      <td id=\"T_84993_row2_col2\" class=\"data row2 col2\" >0.6658</td>\n","      <td id=\"T_84993_row2_col3\" class=\"data row2 col3\" >0.9734</td>\n","      <td id=\"T_84993_row2_col4\" class=\"data row2 col4\" >0.0758</td>\n","      <td id=\"T_84993_row2_col5\" class=\"data row2 col5\" >0.0687</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_84993_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n","      <td id=\"T_84993_row3_col0\" class=\"data row3 col0\" >0.2859</td>\n","      <td id=\"T_84993_row3_col1\" class=\"data row3 col1\" >0.1584</td>\n","      <td id=\"T_84993_row3_col2\" class=\"data row3 col2\" >0.3980</td>\n","      <td id=\"T_84993_row3_col3\" class=\"data row3 col3\" >0.9909</td>\n","      <td id=\"T_84993_row3_col4\" class=\"data row3 col4\" >0.0457</td>\n","      <td id=\"T_84993_row3_col5\" class=\"data row3 col5\" >0.0361</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_84993_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n","      <td id=\"T_84993_row4_col0\" class=\"data row4 col0\" >0.2148</td>\n","      <td id=\"T_84993_row4_col1\" class=\"data row4 col1\" >0.0563</td>\n","      <td id=\"T_84993_row4_col2\" class=\"data row4 col2\" >0.2374</td>\n","      <td id=\"T_84993_row4_col3\" class=\"data row4 col3\" >0.9924</td>\n","      <td id=\"T_84993_row4_col4\" class=\"data row4 col4\" >0.0233</td>\n","      <td id=\"T_84993_row4_col5\" class=\"data row4 col5\" >0.0233</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_84993_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n","      <td id=\"T_84993_row5_col0\" class=\"data row5 col0\" >0.3711</td>\n","      <td id=\"T_84993_row5_col1\" class=\"data row5 col1\" >0.6074</td>\n","      <td id=\"T_84993_row5_col2\" class=\"data row5 col2\" >0.7794</td>\n","      <td id=\"T_84993_row5_col3\" class=\"data row5 col3\" >0.9568</td>\n","      <td id=\"T_84993_row5_col4\" class=\"data row5 col4\" >0.0448</td>\n","      <td id=\"T_84993_row5_col5\" class=\"data row5 col5\" >0.0299</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_84993_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n","      <td id=\"T_84993_row6_col0\" class=\"data row6 col0\" >0.9255</td>\n","      <td id=\"T_84993_row6_col1\" class=\"data row6 col1\" >4.9986</td>\n","      <td id=\"T_84993_row6_col2\" class=\"data row6 col2\" >2.2357</td>\n","      <td id=\"T_84993_row6_col3\" class=\"data row6 col3\" >0.8292</td>\n","      <td id=\"T_84993_row6_col4\" class=\"data row6 col4\" >0.1753</td>\n","      <td id=\"T_84993_row6_col5\" class=\"data row6 col5\" >0.0939</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_84993_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n","      <td id=\"T_84993_row7_col0\" class=\"data row7 col0\" >0.5513</td>\n","      <td id=\"T_84993_row7_col1\" class=\"data row7 col1\" >0.5104</td>\n","      <td id=\"T_84993_row7_col2\" class=\"data row7 col2\" >0.7144</td>\n","      <td id=\"T_84993_row7_col3\" class=\"data row7 col3\" >0.9459</td>\n","      <td id=\"T_84993_row7_col4\" class=\"data row7 col4\" >0.0793</td>\n","      <td id=\"T_84993_row7_col5\" class=\"data row7 col5\" >0.0812</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_84993_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n","      <td id=\"T_84993_row8_col0\" class=\"data row8 col0\" >0.1483</td>\n","      <td id=\"T_84993_row8_col1\" class=\"data row8 col1\" >0.0838</td>\n","      <td id=\"T_84993_row8_col2\" class=\"data row8 col2\" >0.2894</td>\n","      <td id=\"T_84993_row8_col3\" class=\"data row8 col3\" >0.9868</td>\n","      <td id=\"T_84993_row8_col4\" class=\"data row8 col4\" >0.0266</td>\n","      <td id=\"T_84993_row8_col5\" class=\"data row8 col5\" >0.0174</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_84993_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n","      <td id=\"T_84993_row9_col0\" class=\"data row9 col0\" >0.0963</td>\n","      <td id=\"T_84993_row9_col1\" class=\"data row9 col1\" >0.0119</td>\n","      <td id=\"T_84993_row9_col2\" class=\"data row9 col2\" >0.1093</td>\n","      <td id=\"T_84993_row9_col3\" class=\"data row9 col3\" >0.9984</td>\n","      <td id=\"T_84993_row9_col4\" class=\"data row9 col4\" >0.0136</td>\n","      <td id=\"T_84993_row9_col5\" class=\"data row9 col5\" >0.0127</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_84993_level0_row10\" class=\"row_heading level0 row10\" >Mean</th>\n","      <td id=\"T_84993_row10_col0\" class=\"data row10 col0\" >0.3877</td>\n","      <td id=\"T_84993_row10_col1\" class=\"data row10 col1\" >0.8231</td>\n","      <td id=\"T_84993_row10_col2\" class=\"data row10 col2\" >0.6895</td>\n","      <td id=\"T_84993_row10_col3\" class=\"data row10 col3\" >0.9605</td>\n","      <td id=\"T_84993_row10_col4\" class=\"data row10 col4\" >0.0629</td>\n","      <td id=\"T_84993_row10_col5\" class=\"data row10 col5\" >0.0459</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_84993_level0_row11\" class=\"row_heading level0 row11\" >Std</th>\n","      <td id=\"T_84993_row11_col0\" class=\"data row11 col0\" >0.2342</td>\n","      <td id=\"T_84993_row11_col1\" class=\"data row11 col1\" >1.4357</td>\n","      <td id=\"T_84993_row11_col2\" class=\"data row11 col2\" >0.5896</td>\n","      <td id=\"T_84993_row11_col3\" class=\"data row11 col3\" >0.0473</td>\n","      <td id=\"T_84993_row11_col4\" class=\"data row11 col4\" >0.0445</td>\n","      <td id=\"T_84993_row11_col5\" class=\"data row11 col5\" >0.0262</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Processing:   0%|          | 0/4 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d9667e2eac2240c0b673555323c894ee"}},"metadata":{"application/vnd.jupyter.widget-view+json":{"colab":{"custom_widget_manager":{"url":"https://ssl.gstatic.com/colaboratory-static/widgets/colab-cdn-widget-manager/b3e629b1971e1542/manager.min.js"}}}}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}}],"source":[" # Creating the ML model based on best models compared above: Gradient Boosting Regress\n","gbr=create_model('gbr')\n","\n"]},{"cell_type":"code","execution_count":null,"id":"bc205db3","metadata":{"id":"bc205db3","executionInfo":{"status":"aborted","timestamp":1684157168143,"user_tz":-60,"elapsed":26,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":["tuned_gbr = tune_model(gbr, choose_better = True, n_iter = 50)"]},{"cell_type":"code","execution_count":null,"id":"93083dcb","metadata":{"id":"93083dcb","executionInfo":{"status":"aborted","timestamp":1684157168143,"user_tz":-60,"elapsed":26,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":["predict_model(tuned_gbr)"]},{"cell_type":"code","execution_count":null,"id":"7d3f7f36","metadata":{"id":"7d3f7f36","executionInfo":{"status":"aborted","timestamp":1684157168143,"user_tz":-60,"elapsed":25,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":["save_model(gbr, model_name = 'GradientBoostingRegressor')\n","\n"]},{"cell_type":"code","execution_count":null,"id":"83f8fafb","metadata":{"id":"83f8fafb","executionInfo":{"status":"aborted","timestamp":1684157168144,"user_tz":-60,"elapsed":26,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":["\n"]},{"cell_type":"code","execution_count":null,"id":"aff7a3ce","metadata":{"id":"aff7a3ce","executionInfo":{"status":"aborted","timestamp":1684157168144,"user_tz":-60,"elapsed":26,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}}},"outputs":[],"source":["\n","\n","# Define Streamlit app\n","def app():\n","    st.title('Water Flux (LMH) in FO Micropollutant Removal')\n","    st.write('Welcome to my web app!')\n","    st.write('Please input your values for the following features:')\n","    \n","    input_dict={'Micro Pollutant': Micro Pollutant, 'MP Category':MP Category, 'Initial Concentration of MP (mg/L)':Initial Concentration of MP (mg/L), 'Compound MW (g/mol)':Compound MW (g/mol), 'Compound Charge':Compound Charge, 'Initial FS pH':Initial FS pH,'Type of MB':Type of MB, 'MB Contact Angle (°)':MB Contact Angle, 'Draw Solution':Draw Solution, 'DS MW (g mol-1)':DS MW (g mol-1), 'DS Concentration (M)':DS Concentration (M), 'Operating Time (h)':Operating Time (h), 'Cross Flow Velocity (cm/s)':Cross Flow Velocity (cm/s),'Temperature (⁰C)':Temperature (⁰C), 'Removal Rate (%)':Removal Rate (%)}\n","    \n","    # Collect input features from user\n","    input_data = {}\n","    for col in df.columns:\n","        if col != 'Water Flux, Jw (LMH)':\n","            if col in ['Micro Pollutant', 'MP Category','Type of MB','Draw Solution']:\n","                input_data[col] = st.selectbox(col, df[col].unique())\n","            else:\n","                input_data[col] = st.number_input(col, step=0.5)\n","    \n","# Predict target value and display result\n","    prediction = predict_model(gbr, input_data)\n","    st.write('The predicted water flux is:', prediction['Label'][0])\n","\n","# Run Streamlit app\n","if __name__ == '__main__':\n","    app()"]},{"cell_type":"code","execution_count":8,"id":"9b335608","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9b335608","executionInfo":{"status":"ok","timestamp":1684157302066,"user_tz":-60,"elapsed":16045,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}},"outputId":"e3e9dcd2-9a84-4259-9368-acaf18b2f31c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting streamlit\n","  Downloading streamlit-1.22.0-py2.py3-none-any.whl (8.9 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m8.9/8.9 MB\u001b[0m \u001b[31m50.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: altair<5,>=3.2.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.2.2)\n","Collecting blinker>=1.0.0 (from streamlit)\n","  Downloading blinker-1.6.2-py3-none-any.whl (13 kB)\n","Requirement already satisfied: cachetools>=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (5.3.0)\n","Requirement already satisfied: click>=7.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (8.1.3)\n","Requirement already satisfied: importlib-metadata>=1.4 in /usr/local/lib/python3.10/dist-packages (from streamlit) (6.6.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from streamlit) (1.22.4)\n","Requirement already satisfied: packaging>=14.1 in /usr/local/lib/python3.10/dist-packages (from streamlit) (23.1)\n","Requirement already satisfied: pandas<3,>=0.25 in /usr/local/lib/python3.10/dist-packages (from streamlit) (1.5.3)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (8.4.0)\n","Requirement already satisfied: protobuf<4,>=3.12 in /usr/local/lib/python3.10/dist-packages (from streamlit) (3.20.3)\n","Requirement already satisfied: pyarrow>=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (9.0.0)\n","Collecting pympler>=0.9 (from streamlit)\n","  Downloading Pympler-1.0.1-py3-none-any.whl (164 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m164.8/164.8 kB\u001b[0m \u001b[31m17.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: python-dateutil in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.8.2)\n","Requirement already satisfied: requests>=2.4 in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.27.1)\n","Requirement already satisfied: rich>=10.11.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (13.3.4)\n","Requirement already satisfied: tenacity<9,>=8.0.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (8.2.2)\n","Requirement already satisfied: toml in /usr/local/lib/python3.10/dist-packages (from streamlit) (0.10.2)\n","Requirement already satisfied: typing-extensions>=3.10.0.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.5.0)\n","Requirement already satisfied: tzlocal>=1.1 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.3)\n","Collecting validators>=0.2 (from streamlit)\n","  Downloading validators-0.20.0.tar.gz (30 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting gitpython!=3.1.19 (from streamlit)\n","  Downloading GitPython-3.1.31-py3-none-any.whl (184 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m184.3/184.3 kB\u001b[0m \u001b[31m18.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting pydeck>=0.1.dev5 (from streamlit)\n","  Downloading pydeck-0.8.1b0-py2.py3-none-any.whl (4.8 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m4.8/4.8 MB\u001b[0m \u001b[31m65.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: tornado>=6.0.3 in /usr/local/lib/python3.10/dist-packages (from streamlit) (6.3.1)\n","Collecting watchdog (from streamlit)\n","  Downloading watchdog-3.0.0-py3-none-manylinux2014_x86_64.whl (82 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m82.1/82.1 kB\u001b[0m \u001b[31m7.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: entrypoints in /usr/local/lib/python3.10/dist-packages (from altair<5,>=3.2.0->streamlit) (0.4)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from altair<5,>=3.2.0->streamlit) (3.1.2)\n","Requirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.10/dist-packages (from altair<5,>=3.2.0->streamlit) (4.3.3)\n","Requirement already satisfied: toolz in /usr/local/lib/python3.10/dist-packages (from altair<5,>=3.2.0->streamlit) (0.12.0)\n","Collecting gitdb<5,>=4.0.1 (from gitpython!=3.1.19->streamlit)\n","  Downloading gitdb-4.0.10-py3-none-any.whl (62 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m62.7/62.7 kB\u001b[0m \u001b[31m6.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.10/dist-packages (from importlib-metadata>=1.4->streamlit) (3.15.0)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas<3,>=0.25->streamlit) (2022.7.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil->streamlit) (1.16.0)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.4->streamlit) (1.26.15)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.4->streamlit) (2022.12.7)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests>=2.4->streamlit) (2.0.12)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.4->streamlit) (3.4)\n","Requirement already satisfied: markdown-it-py<3.0.0,>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich>=10.11.0->streamlit) (2.2.0)\n","Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich>=10.11.0->streamlit) (2.14.0)\n","Requirement already satisfied: pytz-deprecation-shim in /usr/local/lib/python3.10/dist-packages (from tzlocal>=1.1->streamlit) (0.1.0.post0)\n","Requirement already satisfied: decorator>=3.4.0 in /usr/local/lib/python3.10/dist-packages (from validators>=0.2->streamlit) (4.4.2)\n","Collecting smmap<6,>=3.0.1 (from gitdb<5,>=4.0.1->gitpython!=3.1.19->streamlit)\n","  Downloading smmap-5.0.0-py3-none-any.whl (24 kB)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->altair<5,>=3.2.0->streamlit) (2.1.2)\n","Requirement already satisfied: attrs>=17.4.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<5,>=3.2.0->streamlit) (23.1.0)\n","Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<5,>=3.2.0->streamlit) (0.19.3)\n","Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py<3.0.0,>=2.2.0->rich>=10.11.0->streamlit) (0.1.2)\n","Requirement already satisfied: tzdata in /usr/local/lib/python3.10/dist-packages (from pytz-deprecation-shim->tzlocal>=1.1->streamlit) (2023.3)\n","Building wheels for collected packages: validators\n","  Building wheel for validators (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for validators: filename=validators-0.20.0-py3-none-any.whl size=19579 sha256=353ce0dc6b3feb792440804443196e063deded996e545d55631e2d749b26f14a\n","  Stored in directory: /root/.cache/pip/wheels/f2/ed/dd/d3a556ad245ef9dc570c6bcd2f22886d17b0b408dd3bbb9ac3\n","Successfully built validators\n","Installing collected packages: watchdog, validators, smmap, pympler, blinker, pydeck, gitdb, gitpython, streamlit\n","Successfully installed blinker-1.6.2 gitdb-4.0.10 gitpython-3.1.31 pydeck-0.8.1b0 pympler-1.0.1 smmap-5.0.0 streamlit-1.22.0 validators-0.20.0 watchdog-3.0.0\n"]},{"output_type":"stream","name":"stderr","text":["2023-05-15 13:28:21.252 \n","  \u001b[33m\u001b[1mWarning:\u001b[0m to view this Streamlit app on a browser, run it with the following\n","  command:\n","\n","    streamlit run /usr/local/lib/python3.10/dist-packages/ipykernel_launcher.py [ARGUMENTS]\n","2023-05-15 13:28:21.256 Session state does not function when running a script without `streamlit run`\n"]}],"source":["! pip install streamlit\n","import streamlit as st\n","\n","def app(): \n","    st.title('Water Flux (LMH) Predictor')\n","    st.write('Welcome to my web app!')\n","    st.write('Please input your values for the following features:')\n","\n","    # allow the user to select multiple options\n","    MP_Type = df[\"Micro Pollutant\"].unique()\n","    MB_Type = df[\"Type of MB\"].unique()\n","    DS_Type = df[\"Draw Solution\"].unique()\n","\n","    MP = st.multiselect(\"Micropollutant name:\", MP_Type)\n","    # print the selected options\n","    st.write(\"Micropolutant Type\", MP)\n","\n","    MB = st.selectbox(\"Membrane Type:\", MB_Type)\n","    MP_Conc = st.number_input(\"MP Concentration (g mol-1):\", 0, 1000)\n","    MP_MW = st.number_input(\"MP Molecular Weigth:\", 0, 1000)\n","    Charge = st.slider(\"Charge:\", -1, 1)\n","    FS_pH = st.slider(\"Initial FS pH:\", 0.0, 14.0, step=0.5)\n","    Contact_angle = st.number_input(\"MB Contact Angle:\", 0, 180)\n","    DS = st.selectbox(\"Draw Solute Type:\", DS_Type)\n","    DS_MW = st.number_input(\"MP Molecular Weigth:\", 0, 1000)\n","    DS_Conc = st.number_input(\"MP Concentration (g mol-1):\", 0, 1000)\n","    Op_Time = st.number_input(\"Operation Time (h):\", 0, 100)\n","    Velocity = st.number_input(\"Flow Velocity (cm/s):\", 0, 50)\n","    Temp = st.slider(\"Temperature (C)\", 0.0, 40.0, step=0.5)\n","    Rejection = st.slider(\"Rejection Rate (%)\", 0, 100)\n","\n","    def predict(): \n","        # Perform the prediction based on the user input\n","        input_data = {\n","            \"Micropollutant\": MP,\n","            \"Membrane Type\": MB,\n","            \"MP Concentration\": MP_Conc,\n","            \"MP Molecular Weight\": MP_MW,\n","            \"Charge\": Charge,\n","            \"Initial FS pH\": FS_pH,\n","            \"MB Contact Angle\": Contact_angle,\n","            \"Draw Solute Type\": DS,\n","            \"DS Molecular Weight\": DS_MW,\n","            \"DS Concentration\": DS_Conc,\n","            \"Operation Time\": Op_Time,\n","            \"Velocity\": Velocity,\n","            \"Temperature\": Temp,\n","            \"Rejection Rate\": Rejection\n","        }\n","\n","        prediction = predict_model(gbr, data=input_data)\n","        st.write('The predicted water flux is:', prediction['LMH'][0])\n","\n","    trigger = st.button('Predict', on_click=predict)\n","\n","# Run Streamlit app\n","if __name__ == '__main__':\n","    app()\n"]},{"cell_type":"code","execution_count":null,"id":"51be834f","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"51be834f","executionInfo":{"status":"ok","timestamp":1683897835783,"user_tz":-60,"elapsed":267,"user":{"displayName":"Mehryar Jafary","userId":"02437765180392363850"}},"outputId":"14034c55-c237-4772-86b5-99c3eadf6025"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Micro Pollutant', 'MP Category', 'Initial Concentration of MP (mg/L)',\n","       'Compound MW (g/mol)', 'Compound Charge', 'Initial FS pH', 'Type of MB',\n","       'MB Contact Angle (°)', 'Draw Solution', 'DS MW (g mol-1)',\n","       'DS Concentration (M)', 'Operating Time (h)',\n","       'Cross Flow Velocity (cm/s)', 'Water Flux, Jw (LMH)',\n","       'Reverse Salt Flux, Js (gMH)', 'Temperature (⁰C)', 'Removal Rate (%)'],\n","      dtype='object')"]},"metadata":{},"execution_count":12}],"source":["df.columns"]},{"cell_type":"code","execution_count":null,"id":"dd3660b5","metadata":{"id":"dd3660b5"},"outputs":[],"source":["# Plotting prediction accuracy of GBR\n","plot_model(gbr)"]},{"cell_type":"code","execution_count":null,"id":"d4ade9c1","metadata":{"id":"d4ade9c1"},"outputs":[],"source":["plot_model(gbr, plot = 'error')"]},{"cell_type":"code","execution_count":null,"id":"31afa3b8","metadata":{"id":"31afa3b8"},"outputs":[],"source":[" # Creating the ML model based on best models compared above: Extreme Gradient Boosting \n","\n","xgb = create_model('xgboost')"]},{"cell_type":"code","execution_count":null,"id":"794dbbe5","metadata":{"id":"794dbbe5"},"outputs":[],"source":["# Plotting prediction accuracy of XGB\n","\n","plot_model(xgb)\n","plot_model(xgb, plot = 'error')"]},{"cell_type":"code","execution_count":null,"id":"934add5b","metadata":{"id":"934add5b"},"outputs":[],"source":["interpret_model(xgb)"]},{"cell_type":"code","execution_count":null,"id":"087db6a4","metadata":{"id":"087db6a4"},"outputs":[],"source":["# Creating the ML model based on best models compared above: Random Forest\n","\n","rf = create_model('rf')\n","\n","# Plotting prediction accuracy of RF\n","plot_model(rf)\n","plot_model(rf, plot = 'error')"]},{"cell_type":"code","execution_count":null,"id":"a54e8eff","metadata":{"id":"a54e8eff"},"outputs":[],"source":["# Feature importance plot\n","\n","plot_model(gbr, plot = 'feature')\n","plot_model(rf, plot = 'feature')"]},{"cell_type":"code","execution_count":null,"id":"1e4a108a","metadata":{"id":"1e4a108a"},"outputs":[],"source":["interpret_model(rf)\n"]},{"cell_type":"code","execution_count":null,"id":"1308da9c","metadata":{"id":"1308da9c"},"outputs":[],"source":["interpret_model(xgb)"]},{"cell_type":"code","execution_count":null,"id":"7fa16508","metadata":{"id":"7fa16508","outputId":"53225e26-0b39-4d12-b96a-ff87fb9e595d"},"outputs":[{"data":{"text/html":["<style type=\"text/css\">\n","#T_65ede_row10_col1 {\n","  background-color: lightgreen;\n","}\n","</style>\n","<table id=\"T_65ede\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_65ede_level0_col0\" class=\"col_heading level0 col0\" >Description</th>\n","      <th id=\"T_65ede_level0_col1\" class=\"col_heading level0 col1\" >Value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_65ede_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n","      <td id=\"T_65ede_row0_col0\" class=\"data row0 col0\" >Session id</td>\n","      <td id=\"T_65ede_row0_col1\" class=\"data row0 col1\" >123</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n","      <td id=\"T_65ede_row1_col0\" class=\"data row1 col0\" >Target</td>\n","      <td id=\"T_65ede_row1_col1\" class=\"data row1 col1\" >Removal Rate (%)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n","      <td id=\"T_65ede_row2_col0\" class=\"data row2 col0\" >Target type</td>\n","      <td id=\"T_65ede_row2_col1\" class=\"data row2 col1\" >Regression</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n","      <td id=\"T_65ede_row3_col0\" class=\"data row3 col0\" >Original data shape</td>\n","      <td id=\"T_65ede_row3_col1\" class=\"data row3 col1\" >(234, 17)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n","      <td id=\"T_65ede_row4_col0\" class=\"data row4 col0\" >Transformed data shape</td>\n","      <td id=\"T_65ede_row4_col1\" class=\"data row4 col1\" >(234, 48)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n","      <td id=\"T_65ede_row5_col0\" class=\"data row5 col0\" >Transformed train set shape</td>\n","      <td id=\"T_65ede_row5_col1\" class=\"data row5 col1\" >(163, 48)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n","      <td id=\"T_65ede_row6_col0\" class=\"data row6 col0\" >Transformed test set shape</td>\n","      <td id=\"T_65ede_row6_col1\" class=\"data row6 col1\" >(71, 48)</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n","      <td id=\"T_65ede_row7_col0\" class=\"data row7 col0\" >Numeric features</td>\n","      <td id=\"T_65ede_row7_col1\" class=\"data row7 col1\" >12</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n","      <td id=\"T_65ede_row8_col0\" class=\"data row8 col0\" >Categorical features</td>\n","      <td id=\"T_65ede_row8_col1\" class=\"data row8 col1\" >4</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n","      <td id=\"T_65ede_row9_col0\" class=\"data row9 col0\" >Rows with missing values</td>\n","      <td id=\"T_65ede_row9_col1\" class=\"data row9 col1\" >12.4%</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n","      <td id=\"T_65ede_row10_col0\" class=\"data row10 col0\" >Preprocess</td>\n","      <td id=\"T_65ede_row10_col1\" class=\"data row10 col1\" >True</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n","      <td id=\"T_65ede_row11_col0\" class=\"data row11 col0\" >Imputation type</td>\n","      <td id=\"T_65ede_row11_col1\" class=\"data row11 col1\" >simple</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n","      <td id=\"T_65ede_row12_col0\" class=\"data row12 col0\" >Numeric imputation</td>\n","      <td id=\"T_65ede_row12_col1\" class=\"data row12 col1\" >mean</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n","      <td id=\"T_65ede_row13_col0\" class=\"data row13 col0\" >Categorical imputation</td>\n","      <td id=\"T_65ede_row13_col1\" class=\"data row13 col1\" >mode</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n","      <td id=\"T_65ede_row14_col0\" class=\"data row14 col0\" >Maximum one-hot encoding</td>\n","      <td id=\"T_65ede_row14_col1\" class=\"data row14 col1\" >25</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row15\" class=\"row_heading level0 row15\" >15</th>\n","      <td id=\"T_65ede_row15_col0\" class=\"data row15 col0\" >Encoding method</td>\n","      <td id=\"T_65ede_row15_col1\" class=\"data row15 col1\" >None</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row16\" class=\"row_heading level0 row16\" >16</th>\n","      <td id=\"T_65ede_row16_col0\" class=\"data row16 col0\" >Fold Generator</td>\n","      <td id=\"T_65ede_row16_col1\" class=\"data row16 col1\" >KFold</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row17\" class=\"row_heading level0 row17\" >17</th>\n","      <td id=\"T_65ede_row17_col0\" class=\"data row17 col0\" >Fold Number</td>\n","      <td id=\"T_65ede_row17_col1\" class=\"data row17 col1\" >10</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row18\" class=\"row_heading level0 row18\" >18</th>\n","      <td id=\"T_65ede_row18_col0\" class=\"data row18 col0\" >CPU Jobs</td>\n","      <td id=\"T_65ede_row18_col1\" class=\"data row18 col1\" >-1</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row19\" class=\"row_heading level0 row19\" >19</th>\n","      <td id=\"T_65ede_row19_col0\" class=\"data row19 col0\" >Use GPU</td>\n","      <td id=\"T_65ede_row19_col1\" class=\"data row19 col1\" >False</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row20\" class=\"row_heading level0 row20\" >20</th>\n","      <td id=\"T_65ede_row20_col0\" class=\"data row20 col0\" >Log Experiment</td>\n","      <td id=\"T_65ede_row20_col1\" class=\"data row20 col1\" >False</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row21\" class=\"row_heading level0 row21\" >21</th>\n","      <td id=\"T_65ede_row21_col0\" class=\"data row21 col0\" >Experiment Name</td>\n","      <td id=\"T_65ede_row21_col1\" class=\"data row21 col1\" >reg-default-name</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_65ede_level0_row22\" class=\"row_heading level0 row22\" >22</th>\n","      <td id=\"T_65ede_row22_col0\" class=\"data row22 col0\" >USI</td>\n","      <td id=\"T_65ede_row22_col1\" class=\"data row22 col1\" >0a6b</td>\n","    </tr>\n","  </tbody>\n","</table>\n"],"text/plain":["<pandas.io.formats.style.Styler at 0x27eccaa8ca0>"]},"metadata":{},"output_type":"display_data"},{"data":{"text/plain":["<pycaret.regression.oop.RegressionExperiment at 0x27ecb2fe430>"]},"execution_count":44,"metadata":{},"output_type":"execute_result"}],"source":["# Setting up a new model by choosing Rejection rate (R) as the prediction target\n","\n","setup(data = df, target = 'Removal Rate (%)' ,session_id = 123 ) \n","#remove_outliers = True\n","#\n","# feature_selection = True"]},{"cell_type":"code","execution_count":null,"id":"812a7a20","metadata":{"id":"812a7a20"},"outputs":[],"source":["df.['Removal Rate (%)']"]},{"cell_type":"code","execution_count":null,"id":"70f7192e","metadata":{"id":"70f7192e"},"outputs":[],"source":["plt.figure(figsize=(25,25))\n","my_correlation = df.corr()\n","sns.heatmap(my_correlation,annot=True, cmap='coolwarm',annot_kws={\"size\": 16})\n","ax = plt.gca()\n","ax.tick_params(axis='x', labelsize=20)\n","ax.tick_params(axis='y', labelsize=20)\n","ax.set_xticklabels(ax.get_xticklabels(), rotation=90)\n","ax.set_yticklabels(ax.get_yticklabels(), rotation=360)\n","cbar = plt.gcf().axes[-1]\n","cbar.tick_params(labelsize=16)"]},{"cell_type":"code","execution_count":null,"id":"117adadf","metadata":{"id":"117adadf","outputId":"439c5fb6-6cc4-4a53-fcc1-eb5d3a75706a"},"outputs":[{"ename":"RuntimeError","evalue":"This function/method requires the users to run setup() first.\nMore info: https://pycaret.gitbook.io/docs/get-started/quickstart","output_type":"error","traceback":["\u001b[1;31m---------------------------------------------------------------------------\u001b[0m","\u001b[1;31mRuntimeError\u001b[0m                              Traceback (most recent call last)","\u001b[1;32m~\\AppData\\Local\\Temp\\ipykernel_8736\\3410444159.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[1;31m# Auto ML using PyCaret with all regression models available\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      2\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 3\u001b[1;33m \u001b[0mbest\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mcompare_models\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\pycaret\\utils\\generic.py\u001b[0m in \u001b[0;36mwrapper\u001b[1;34m(*args, **kwargs)\u001b[0m\n\u001b[0;32m    963\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mglobals_d\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mname\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    964\u001b[0m                     \u001b[1;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmessage\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 965\u001b[1;33m             \u001b[1;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m*\u001b[0m\u001b[0margs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    966\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    967\u001b[0m         \u001b[1;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n","\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\pycaret\\regression\\functional.py\u001b[0m in \u001b[0;36mcompare_models\u001b[1;34m(include, exclude, fold, round, cross_validation, sort, n_select, budget_time, turbo, errors, fit_kwargs, groups, experiment_custom_tags, engine, verbose, parallel)\u001b[0m\n\u001b[0;32m    812\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    813\u001b[0m     \"\"\"\n\u001b[1;32m--> 814\u001b[1;33m     return _CURRENT_EXPERIMENT.compare_models(\n\u001b[0m\u001b[0;32m    815\u001b[0m         \u001b[0minclude\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0minclude\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    816\u001b[0m         \u001b[0mexclude\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mexclude\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n","\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\pycaret\\regression\\oop.py\u001b[0m in \u001b[0;36mcompare_models\u001b[1;34m(self, include, exclude, fold, round, cross_validation, sort, n_select, budget_time, turbo, errors, fit_kwargs, groups, experiment_custom_tags, engine, verbose, parallel)\u001b[0m\n\u001b[0;32m   1130\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1131\u001b[0m         \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1132\u001b[1;33m             return_values = super().compare_models(\n\u001b[0m\u001b[0;32m   1133\u001b[0m                 \u001b[0minclude\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0minclude\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1134\u001b[0m                 \u001b[0mexclude\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mexclude\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n","\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\pycaret\\internal\\pycaret_experiment\\supervised_experiment.py\u001b[0m in \u001b[0;36mcompare_models\u001b[1;34m(self, include, exclude, fold, round, cross_validation, sort, n_select, budget_time, turbo, errors, fit_kwargs, groups, experiment_custom_tags, probability_threshold, verbose, parallel, caller_params)\u001b[0m\n\u001b[0;32m    527\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    528\u001b[0m         \"\"\"\n\u001b[1;32m--> 529\u001b[1;33m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_check_setup_ran\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    530\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    531\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mparallel\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n","\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\pycaret\\internal\\pycaret_experiment\\pycaret_experiment.py\u001b[0m in \u001b[0;36m_check_setup_ran\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m    135\u001b[0m         \"\"\"\n\u001b[0;32m    136\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_setup_ran\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 137\u001b[1;33m             raise RuntimeError(\n\u001b[0m\u001b[0;32m    138\u001b[0m                 \u001b[1;34m\"This function/method requires the users to run setup() first.\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    139\u001b[0m                 \u001b[1;34m\"\\nMore info: https://pycaret.gitbook.io/docs/get-started/quickstart\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n","\u001b[1;31mRuntimeError\u001b[0m: This function/method requires the users to run setup() first.\nMore info: https://pycaret.gitbook.io/docs/get-started/quickstart"]}],"source":["# Auto ML using PyCaret with all regression models available\n","\n","best = compare_models() "]},{"cell_type":"code","execution_count":null,"id":"838b7b7e","metadata":{"id":"838b7b7e"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"id":"5ea18991","metadata":{"colab":{"referenced_widgets":[""]},"id":"5ea18991","outputId":"79017721-9376-4746-bbaa-27e292161b96"},"outputs":[{"data":{"text/html":[],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<style type=\"text/css\">\n","#T_41e82_row10_col0, #T_41e82_row10_col1, #T_41e82_row10_col2, #T_41e82_row10_col3, #T_41e82_row10_col4, #T_41e82_row10_col5 {\n","  background: yellow;\n","}\n","</style>\n","<table id=\"T_41e82\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_41e82_level0_col0\" class=\"col_heading level0 col0\" >MAE</th>\n","      <th id=\"T_41e82_level0_col1\" class=\"col_heading level0 col1\" >MSE</th>\n","      <th id=\"T_41e82_level0_col2\" class=\"col_heading level0 col2\" >RMSE</th>\n","      <th id=\"T_41e82_level0_col3\" class=\"col_heading level0 col3\" >R2</th>\n","      <th id=\"T_41e82_level0_col4\" class=\"col_heading level0 col4\" >RMSLE</th>\n","      <th id=\"T_41e82_level0_col5\" class=\"col_heading level0 col5\" >MAPE</th>\n","    </tr>\n","    <tr>\n","      <th class=\"index_name level0\" >Fold</th>\n","      <th class=\"blank col0\" >&nbsp;</th>\n","      <th class=\"blank col1\" >&nbsp;</th>\n","      <th class=\"blank col2\" >&nbsp;</th>\n","      <th class=\"blank col3\" >&nbsp;</th>\n","      <th class=\"blank col4\" >&nbsp;</th>\n","      <th class=\"blank col5\" >&nbsp;</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_41e82_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n","      <td id=\"T_41e82_row0_col0\" class=\"data row0 col0\" >3.3622</td>\n","      <td id=\"T_41e82_row0_col1\" class=\"data row0 col1\" >25.4172</td>\n","      <td id=\"T_41e82_row0_col2\" class=\"data row0 col2\" >5.0415</td>\n","      <td id=\"T_41e82_row0_col3\" class=\"data row0 col3\" >0.8073</td>\n","      <td id=\"T_41e82_row0_col4\" class=\"data row0 col4\" >0.0646</td>\n","      <td id=\"T_41e82_row0_col5\" class=\"data row0 col5\" >0.0419</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_41e82_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n","      <td id=\"T_41e82_row1_col0\" class=\"data row1 col0\" >4.6473</td>\n","      <td id=\"T_41e82_row1_col1\" class=\"data row1 col1\" >45.5534</td>\n","      <td id=\"T_41e82_row1_col2\" class=\"data row1 col2\" >6.7493</td>\n","      <td id=\"T_41e82_row1_col3\" class=\"data row1 col3\" >0.9570</td>\n","      <td id=\"T_41e82_row1_col4\" class=\"data row1 col4\" >0.1822</td>\n","      <td id=\"T_41e82_row1_col5\" class=\"data row1 col5\" >0.1277</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_41e82_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n","      <td id=\"T_41e82_row2_col0\" class=\"data row2 col0\" >11.6610</td>\n","      <td id=\"T_41e82_row2_col1\" class=\"data row2 col1\" >306.6073</td>\n","      <td id=\"T_41e82_row2_col2\" class=\"data row2 col2\" >17.5102</td>\n","      <td id=\"T_41e82_row2_col3\" class=\"data row2 col3\" >0.2691</td>\n","      <td id=\"T_41e82_row2_col4\" class=\"data row2 col4\" >0.2668</td>\n","      <td id=\"T_41e82_row2_col5\" class=\"data row2 col5\" >0.1977</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_41e82_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n","      <td id=\"T_41e82_row3_col0\" class=\"data row3 col0\" >8.2104</td>\n","      <td id=\"T_41e82_row3_col1\" class=\"data row3 col1\" >174.3496</td>\n","      <td id=\"T_41e82_row3_col2\" class=\"data row3 col2\" >13.2041</td>\n","      <td id=\"T_41e82_row3_col3\" class=\"data row3 col3\" >0.8054</td>\n","      <td id=\"T_41e82_row3_col4\" class=\"data row3 col4\" >0.4262</td>\n","      <td id=\"T_41e82_row3_col5\" class=\"data row3 col5\" >0.3694</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_41e82_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n","      <td id=\"T_41e82_row4_col0\" class=\"data row4 col0\" >6.3845</td>\n","      <td id=\"T_41e82_row4_col1\" class=\"data row4 col1\" >70.9263</td>\n","      <td id=\"T_41e82_row4_col2\" class=\"data row4 col2\" >8.4218</td>\n","      <td id=\"T_41e82_row4_col3\" class=\"data row4 col3\" >0.8947</td>\n","      <td id=\"T_41e82_row4_col4\" class=\"data row4 col4\" >0.3514</td>\n","      <td id=\"T_41e82_row4_col5\" class=\"data row4 col5\" >0.2791</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_41e82_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n","      <td id=\"T_41e82_row5_col0\" class=\"data row5 col0\" >6.8675</td>\n","      <td id=\"T_41e82_row5_col1\" class=\"data row5 col1\" >156.9100</td>\n","      <td id=\"T_41e82_row5_col2\" class=\"data row5 col2\" >12.5264</td>\n","      <td id=\"T_41e82_row5_col3\" class=\"data row5 col3\" >0.6914</td>\n","      <td id=\"T_41e82_row5_col4\" class=\"data row5 col4\" >0.2411</td>\n","      <td id=\"T_41e82_row5_col5\" class=\"data row5 col5\" >0.1437</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_41e82_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n","      <td id=\"T_41e82_row6_col0\" class=\"data row6 col0\" >9.7040</td>\n","      <td id=\"T_41e82_row6_col1\" class=\"data row6 col1\" >229.5679</td>\n","      <td id=\"T_41e82_row6_col2\" class=\"data row6 col2\" >15.1515</td>\n","      <td id=\"T_41e82_row6_col3\" class=\"data row6 col3\" >0.2611</td>\n","      <td id=\"T_41e82_row6_col4\" class=\"data row6 col4\" >0.2384</td>\n","      <td id=\"T_41e82_row6_col5\" class=\"data row6 col5\" >0.1678</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_41e82_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n","      <td id=\"T_41e82_row7_col0\" class=\"data row7 col0\" >7.1412</td>\n","      <td id=\"T_41e82_row7_col1\" class=\"data row7 col1\" >111.3615</td>\n","      <td id=\"T_41e82_row7_col2\" class=\"data row7 col2\" >10.5528</td>\n","      <td id=\"T_41e82_row7_col3\" class=\"data row7 col3\" >0.8372</td>\n","      <td id=\"T_41e82_row7_col4\" class=\"data row7 col4\" >0.4388</td>\n","      <td id=\"T_41e82_row7_col5\" class=\"data row7 col5\" >0.3855</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_41e82_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n","      <td id=\"T_41e82_row8_col0\" class=\"data row8 col0\" >8.7321</td>\n","      <td id=\"T_41e82_row8_col1\" class=\"data row8 col1\" >175.4474</td>\n","      <td id=\"T_41e82_row8_col2\" class=\"data row8 col2\" >13.2457</td>\n","      <td id=\"T_41e82_row8_col3\" class=\"data row8 col3\" >0.5407</td>\n","      <td id=\"T_41e82_row8_col4\" class=\"data row8 col4\" >0.2091</td>\n","      <td id=\"T_41e82_row8_col5\" class=\"data row8 col5\" >0.1474</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_41e82_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n","      <td id=\"T_41e82_row9_col0\" class=\"data row9 col0\" >4.4336</td>\n","      <td id=\"T_41e82_row9_col1\" class=\"data row9 col1\" >41.6033</td>\n","      <td id=\"T_41e82_row9_col2\" class=\"data row9 col2\" >6.4501</td>\n","      <td id=\"T_41e82_row9_col3\" class=\"data row9 col3\" >0.8201</td>\n","      <td id=\"T_41e82_row9_col4\" class=\"data row9 col4\" >0.1414</td>\n","      <td id=\"T_41e82_row9_col5\" class=\"data row9 col5\" >0.0655</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_41e82_level0_row10\" class=\"row_heading level0 row10\" >Mean</th>\n","      <td id=\"T_41e82_row10_col0\" class=\"data row10 col0\" >7.1144</td>\n","      <td id=\"T_41e82_row10_col1\" class=\"data row10 col1\" >133.7744</td>\n","      <td id=\"T_41e82_row10_col2\" class=\"data row10 col2\" >10.8853</td>\n","      <td id=\"T_41e82_row10_col3\" class=\"data row10 col3\" >0.6884</td>\n","      <td id=\"T_41e82_row10_col4\" class=\"data row10 col4\" >0.2560</td>\n","      <td id=\"T_41e82_row10_col5\" class=\"data row10 col5\" >0.1926</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_41e82_level0_row11\" class=\"row_heading level0 row11\" >Std</th>\n","      <td id=\"T_41e82_row11_col0\" class=\"data row11 col0\" >2.4319</td>\n","      <td id=\"T_41e82_row11_col1\" class=\"data row11 col1\" >86.8550</td>\n","      <td id=\"T_41e82_row11_col2\" class=\"data row11 col2\" >3.9094</td>\n","      <td id=\"T_41e82_row11_col3\" class=\"data row11 col3\" >0.2371</td>\n","      <td id=\"T_41e82_row11_col4\" class=\"data row11 col4\" >0.1138</td>\n","      <td id=\"T_41e82_row11_col5\" class=\"data row11 col5\" >0.1114</td>\n","    </tr>\n","  </tbody>\n","</table>\n"],"text/plain":["<pandas.io.formats.style.Styler at 0x27ecb21c2b0>"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"","version_major":2,"version_minor":0},"text/plain":["Processing:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"}],"source":[" # Creating the ML model based on best models compared above: Gradient Boosting Regress\n","gbr=create_model('gbr')"]},{"cell_type":"code","execution_count":null,"id":"e370a1be","metadata":{"colab":{"referenced_widgets":[""]},"id":"e370a1be","outputId":"85007f3e-d6b9-47ea-a0f1-9c4cc073bc07"},"outputs":[{"data":{"text/html":[],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<style type=\"text/css\">\n","#T_7ce20_row10_col0, #T_7ce20_row10_col1, #T_7ce20_row10_col2, #T_7ce20_row10_col3, #T_7ce20_row10_col4, #T_7ce20_row10_col5 {\n","  background: yellow;\n","}\n","</style>\n","<table id=\"T_7ce20\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_7ce20_level0_col0\" class=\"col_heading level0 col0\" >MAE</th>\n","      <th id=\"T_7ce20_level0_col1\" class=\"col_heading level0 col1\" >MSE</th>\n","      <th id=\"T_7ce20_level0_col2\" class=\"col_heading level0 col2\" >RMSE</th>\n","      <th id=\"T_7ce20_level0_col3\" class=\"col_heading level0 col3\" >R2</th>\n","      <th id=\"T_7ce20_level0_col4\" class=\"col_heading level0 col4\" >RMSLE</th>\n","      <th id=\"T_7ce20_level0_col5\" class=\"col_heading level0 col5\" >MAPE</th>\n","    </tr>\n","    <tr>\n","      <th class=\"index_name level0\" >Fold</th>\n","      <th class=\"blank col0\" >&nbsp;</th>\n","      <th class=\"blank col1\" >&nbsp;</th>\n","      <th class=\"blank col2\" >&nbsp;</th>\n","      <th class=\"blank col3\" >&nbsp;</th>\n","      <th class=\"blank col4\" >&nbsp;</th>\n","      <th class=\"blank col5\" >&nbsp;</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_7ce20_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n","      <td id=\"T_7ce20_row0_col0\" class=\"data row0 col0\" >3.6587</td>\n","      <td id=\"T_7ce20_row0_col1\" class=\"data row0 col1\" >32.7765</td>\n","      <td id=\"T_7ce20_row0_col2\" class=\"data row0 col2\" >5.7251</td>\n","      <td id=\"T_7ce20_row0_col3\" class=\"data row0 col3\" >0.7515</td>\n","      <td id=\"T_7ce20_row0_col4\" class=\"data row0 col4\" >0.0697</td>\n","      <td id=\"T_7ce20_row0_col5\" class=\"data row0 col5\" >0.0440</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_7ce20_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n","      <td id=\"T_7ce20_row1_col0\" class=\"data row1 col0\" >6.0282</td>\n","      <td id=\"T_7ce20_row1_col1\" class=\"data row1 col1\" >82.3194</td>\n","      <td id=\"T_7ce20_row1_col2\" class=\"data row1 col2\" >9.0730</td>\n","      <td id=\"T_7ce20_row1_col3\" class=\"data row1 col3\" >0.9224</td>\n","      <td id=\"T_7ce20_row1_col4\" class=\"data row1 col4\" >0.2510</td>\n","      <td id=\"T_7ce20_row1_col5\" class=\"data row1 col5\" >0.1728</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_7ce20_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n","      <td id=\"T_7ce20_row2_col0\" class=\"data row2 col0\" >10.3016</td>\n","      <td id=\"T_7ce20_row2_col1\" class=\"data row2 col1\" >261.6980</td>\n","      <td id=\"T_7ce20_row2_col2\" class=\"data row2 col2\" >16.1771</td>\n","      <td id=\"T_7ce20_row2_col3\" class=\"data row2 col3\" >0.3761</td>\n","      <td id=\"T_7ce20_row2_col4\" class=\"data row2 col4\" >0.2370</td>\n","      <td id=\"T_7ce20_row2_col5\" class=\"data row2 col5\" >0.1690</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_7ce20_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n","      <td id=\"T_7ce20_row3_col0\" class=\"data row3 col0\" >7.3433</td>\n","      <td id=\"T_7ce20_row3_col1\" class=\"data row3 col1\" >188.0156</td>\n","      <td id=\"T_7ce20_row3_col2\" class=\"data row3 col2\" >13.7119</td>\n","      <td id=\"T_7ce20_row3_col3\" class=\"data row3 col3\" >0.7902</td>\n","      <td id=\"T_7ce20_row3_col4\" class=\"data row3 col4\" >0.4528</td>\n","      <td id=\"T_7ce20_row3_col5\" class=\"data row3 col5\" >0.4239</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_7ce20_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n","      <td id=\"T_7ce20_row4_col0\" class=\"data row4 col0\" >6.9796</td>\n","      <td id=\"T_7ce20_row4_col1\" class=\"data row4 col1\" >93.2099</td>\n","      <td id=\"T_7ce20_row4_col2\" class=\"data row4 col2\" >9.6545</td>\n","      <td id=\"T_7ce20_row4_col3\" class=\"data row4 col3\" >0.8617</td>\n","      <td id=\"T_7ce20_row4_col4\" class=\"data row4 col4\" >0.4084</td>\n","      <td id=\"T_7ce20_row4_col5\" class=\"data row4 col5\" >0.3520</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_7ce20_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n","      <td id=\"T_7ce20_row5_col0\" class=\"data row5 col0\" >8.7433</td>\n","      <td id=\"T_7ce20_row5_col1\" class=\"data row5 col1\" >169.2180</td>\n","      <td id=\"T_7ce20_row5_col2\" class=\"data row5 col2\" >13.0084</td>\n","      <td id=\"T_7ce20_row5_col3\" class=\"data row5 col3\" >0.6672</td>\n","      <td id=\"T_7ce20_row5_col4\" class=\"data row5 col4\" >0.2383</td>\n","      <td id=\"T_7ce20_row5_col5\" class=\"data row5 col5\" >0.1674</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_7ce20_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n","      <td id=\"T_7ce20_row6_col0\" class=\"data row6 col0\" >5.5863</td>\n","      <td id=\"T_7ce20_row6_col1\" class=\"data row6 col1\" >51.8366</td>\n","      <td id=\"T_7ce20_row6_col2\" class=\"data row6 col2\" >7.1998</td>\n","      <td id=\"T_7ce20_row6_col3\" class=\"data row6 col3\" >0.8332</td>\n","      <td id=\"T_7ce20_row6_col4\" class=\"data row6 col4\" >0.1030</td>\n","      <td id=\"T_7ce20_row6_col5\" class=\"data row6 col5\" >0.0760</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_7ce20_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n","      <td id=\"T_7ce20_row7_col0\" class=\"data row7 col0\" >6.0732</td>\n","      <td id=\"T_7ce20_row7_col1\" class=\"data row7 col1\" >75.5489</td>\n","      <td id=\"T_7ce20_row7_col2\" class=\"data row7 col2\" >8.6919</td>\n","      <td id=\"T_7ce20_row7_col3\" class=\"data row7 col3\" >0.8895</td>\n","      <td id=\"T_7ce20_row7_col4\" class=\"data row7 col4\" >0.4038</td>\n","      <td id=\"T_7ce20_row7_col5\" class=\"data row7 col5\" >0.3402</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_7ce20_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n","      <td id=\"T_7ce20_row8_col0\" class=\"data row8 col0\" >8.6144</td>\n","      <td id=\"T_7ce20_row8_col1\" class=\"data row8 col1\" >122.4819</td>\n","      <td id=\"T_7ce20_row8_col2\" class=\"data row8 col2\" >11.0672</td>\n","      <td id=\"T_7ce20_row8_col3\" class=\"data row8 col3\" >0.6794</td>\n","      <td id=\"T_7ce20_row8_col4\" class=\"data row8 col4\" >0.1740</td>\n","      <td id=\"T_7ce20_row8_col5\" class=\"data row8 col5\" >0.1323</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_7ce20_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n","      <td id=\"T_7ce20_row9_col0\" class=\"data row9 col0\" >4.1898</td>\n","      <td id=\"T_7ce20_row9_col1\" class=\"data row9 col1\" >31.7934</td>\n","      <td id=\"T_7ce20_row9_col2\" class=\"data row9 col2\" >5.6386</td>\n","      <td id=\"T_7ce20_row9_col3\" class=\"data row9 col3\" >0.8625</td>\n","      <td id=\"T_7ce20_row9_col4\" class=\"data row9 col4\" >0.1106</td>\n","      <td id=\"T_7ce20_row9_col5\" class=\"data row9 col5\" >0.0602</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_7ce20_level0_row10\" class=\"row_heading level0 row10\" >Mean</th>\n","      <td id=\"T_7ce20_row10_col0\" class=\"data row10 col0\" >6.7518</td>\n","      <td id=\"T_7ce20_row10_col1\" class=\"data row10 col1\" >110.8898</td>\n","      <td id=\"T_7ce20_row10_col2\" class=\"data row10 col2\" >9.9947</td>\n","      <td id=\"T_7ce20_row10_col3\" class=\"data row10 col3\" >0.7634</td>\n","      <td id=\"T_7ce20_row10_col4\" class=\"data row10 col4\" >0.2449</td>\n","      <td id=\"T_7ce20_row10_col5\" class=\"data row10 col5\" >0.1938</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_7ce20_level0_row11\" class=\"row_heading level0 row11\" >Std</th>\n","      <td id=\"T_7ce20_row11_col0\" class=\"data row11 col0\" >1.9726</td>\n","      <td id=\"T_7ce20_row11_col1\" class=\"data row11 col1\" >71.0289</td>\n","      <td id=\"T_7ce20_row11_col2\" class=\"data row11 col2\" >3.3159</td>\n","      <td id=\"T_7ce20_row11_col3\" class=\"data row11 col3\" >0.1525</td>\n","      <td id=\"T_7ce20_row11_col4\" class=\"data row11 col4\" >0.1301</td>\n","      <td id=\"T_7ce20_row11_col5\" class=\"data row11 col5\" >0.1261</td>\n","    </tr>\n","  </tbody>\n","</table>\n"],"text/plain":["<pandas.io.formats.style.Styler at 0x27ec0d74fa0>"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"","version_major":2,"version_minor":0},"text/plain":["Processing:   0%|          | 0/7 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["Fitting 10 folds for each of 50 candidates, totalling 500 fits\n"]}],"source":["tuned_gbr = tune_model(gbr, choose_better = True, n_iter = 50)"]},{"cell_type":"code","execution_count":null,"id":"35480e57","metadata":{"id":"35480e57","outputId":"b3a029d6-8b2c-4969-9823-fd37c65b4a70"},"outputs":[{"data":{"text/html":[],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"\n","text/plain":["<Figure size 800x550 with 2 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Plotting prediction accuracy of GBR\n","plot_model(tuned_gbr)"]},{"cell_type":"code","execution_count":null,"id":"23a2b87e","metadata":{"id":"23a2b87e","outputId":"574101e8-7aab-4f8b-e7a3-656294e9ec6d"},"outputs":[{"data":{"text/html":[],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"\n","text/plain":["<Figure size 800x550 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plot_model(tuned_gbr, plot = 'error')"]},{"cell_type":"code","execution_count":null,"id":"16f8682e","metadata":{"id":"16f8682e","outputId":"c309a09b-402f-4c75-b73d-f32fac16622b"},"outputs":[{"ename":"ValueError","evalue":"Plot Not Available. Please see docstring for list of available Plots.","output_type":"error","traceback":["\u001b[1;31m---------------------------------------------------------------------------\u001b[0m","\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[1;32m~\\AppData\\Local\\Temp\\ipykernel_8736\\3694920389.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mplot_model\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mtuned_xgb\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mplot\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;34m'auc'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\pycaret\\utils\\generic.py\u001b[0m in \u001b[0;36mwrapper\u001b[1;34m(*args, **kwargs)\u001b[0m\n\u001b[0;32m    963\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mglobals_d\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mname\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    964\u001b[0m                     \u001b[1;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmessage\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 965\u001b[1;33m             \u001b[1;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m*\u001b[0m\u001b[0margs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    966\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    967\u001b[0m         \u001b[1;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n","\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\pycaret\\regression\\functional.py\u001b[0m in \u001b[0;36mplot_model\u001b[1;34m(estimator, plot, scale, save, fold, fit_kwargs, plot_kwargs, groups, use_train_data, verbose, display_format)\u001b[0m\n\u001b[0;32m   1665\u001b[0m     \"\"\"\n\u001b[0;32m   1666\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1667\u001b[1;33m     return _CURRENT_EXPERIMENT.plot_model(\n\u001b[0m\u001b[0;32m   1668\u001b[0m         \u001b[0mestimator\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mestimator\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1669\u001b[0m         \u001b[0mplot\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mplot\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n","\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\pycaret\\regression\\oop.py\u001b[0m in \u001b[0;36mplot_model\u001b[1;34m(self, estimator, plot, scale, save, fold, fit_kwargs, plot_kwargs, groups, use_train_data, verbose, display_format)\u001b[0m\n\u001b[0;32m   1966\u001b[0m         \"\"\"\n\u001b[0;32m   1967\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1968\u001b[1;33m         return super().plot_model(\n\u001b[0m\u001b[0;32m   1969\u001b[0m             \u001b[0mestimator\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mestimator\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1970\u001b[0m             \u001b[0mplot\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mplot\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n","\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\pycaret\\internal\\pycaret_experiment\\tabular_experiment.py\u001b[0m in \u001b[0;36mplot_model\u001b[1;34m(self, estimator, plot, scale, save, fold, fit_kwargs, plot_kwargs, groups, feature_name, label, use_train_data, verbose, display_format)\u001b[0m\n\u001b[0;32m   2076\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2077\u001b[0m         \"\"\"\n\u001b[1;32m-> 2078\u001b[1;33m         return self._plot_model(\n\u001b[0m\u001b[0;32m   2079\u001b[0m             \u001b[0mestimator\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mestimator\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2080\u001b[0m             \u001b[0mplot\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mplot\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n","\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\pycaret\\internal\\pycaret_experiment\\tabular_experiment.py\u001b[0m in \u001b[0;36m_plot_model\u001b[1;34m(self, estimator, plot, scale, save, fold, fit_kwargs, plot_kwargs, groups, feature_name, label, use_train_data, verbose, system, display, display_format)\u001b[0m\n\u001b[0;32m    412\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    413\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mplot\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_available_plots\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 414\u001b[1;33m             raise ValueError(\n\u001b[0m\u001b[0;32m    415\u001b[0m                 \u001b[1;34m\"Plot Not Available. Please see docstring for list of available Plots.\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    416\u001b[0m             )\n","\u001b[1;31mValueError\u001b[0m: Plot Not Available. Please see docstring for list of available Plots."]}],"source":["plot_model(tuned_xgb, plot = 'auc')"]},{"cell_type":"code","execution_count":null,"id":"93171ac2","metadata":{"colab":{"referenced_widgets":[""]},"id":"93171ac2","outputId":"5faf656a-6663-461d-adc3-4957eeeaba98"},"outputs":[{"data":{"text/html":[],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<style type=\"text/css\">\n","#T_a6e78_row10_col0, #T_a6e78_row10_col1, #T_a6e78_row10_col2, #T_a6e78_row10_col3, #T_a6e78_row10_col4, #T_a6e78_row10_col5 {\n","  background: yellow;\n","}\n","</style>\n","<table id=\"T_a6e78\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_a6e78_level0_col0\" class=\"col_heading level0 col0\" >MAE</th>\n","      <th id=\"T_a6e78_level0_col1\" class=\"col_heading level0 col1\" >MSE</th>\n","      <th id=\"T_a6e78_level0_col2\" class=\"col_heading level0 col2\" >RMSE</th>\n","      <th id=\"T_a6e78_level0_col3\" class=\"col_heading level0 col3\" >R2</th>\n","      <th id=\"T_a6e78_level0_col4\" class=\"col_heading level0 col4\" >RMSLE</th>\n","      <th id=\"T_a6e78_level0_col5\" class=\"col_heading level0 col5\" >MAPE</th>\n","    </tr>\n","    <tr>\n","      <th class=\"index_name level0\" >Fold</th>\n","      <th class=\"blank col0\" >&nbsp;</th>\n","      <th class=\"blank col1\" >&nbsp;</th>\n","      <th class=\"blank col2\" >&nbsp;</th>\n","      <th class=\"blank col3\" >&nbsp;</th>\n","      <th class=\"blank col4\" >&nbsp;</th>\n","      <th class=\"blank col5\" >&nbsp;</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_a6e78_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n","      <td id=\"T_a6e78_row0_col0\" class=\"data row0 col0\" >6.0778</td>\n","      <td id=\"T_a6e78_row0_col1\" class=\"data row0 col1\" >86.1324</td>\n","      <td id=\"T_a6e78_row0_col2\" class=\"data row0 col2\" >9.2808</td>\n","      <td id=\"T_a6e78_row0_col3\" class=\"data row0 col3\" >0.3469</td>\n","      <td id=\"T_a6e78_row0_col4\" class=\"data row0 col4\" >0.1127</td>\n","      <td id=\"T_a6e78_row0_col5\" class=\"data row0 col5\" >0.0718</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_a6e78_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n","      <td id=\"T_a6e78_row1_col0\" class=\"data row1 col0\" >5.0366</td>\n","      <td id=\"T_a6e78_row1_col1\" class=\"data row1 col1\" >67.4582</td>\n","      <td id=\"T_a6e78_row1_col2\" class=\"data row1 col2\" >8.2133</td>\n","      <td id=\"T_a6e78_row1_col3\" class=\"data row1 col3\" >0.9364</td>\n","      <td id=\"T_a6e78_row1_col4\" class=\"data row1 col4\" >0.2266</td>\n","      <td id=\"T_a6e78_row1_col5\" class=\"data row1 col5\" >0.1401</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_a6e78_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n","      <td id=\"T_a6e78_row2_col0\" class=\"data row2 col0\" >12.8053</td>\n","      <td id=\"T_a6e78_row2_col1\" class=\"data row2 col1\" >416.9919</td>\n","      <td id=\"T_a6e78_row2_col2\" class=\"data row2 col2\" >20.4204</td>\n","      <td id=\"T_a6e78_row2_col3\" class=\"data row2 col3\" >0.0059</td>\n","      <td id=\"T_a6e78_row2_col4\" class=\"data row2 col4\" >0.3039</td>\n","      <td id=\"T_a6e78_row2_col5\" class=\"data row2 col5\" >0.2163</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_a6e78_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n","      <td id=\"T_a6e78_row3_col0\" class=\"data row3 col0\" >7.9129</td>\n","      <td id=\"T_a6e78_row3_col1\" class=\"data row3 col1\" >234.9921</td>\n","      <td id=\"T_a6e78_row3_col2\" class=\"data row3 col2\" >15.3295</td>\n","      <td id=\"T_a6e78_row3_col3\" class=\"data row3 col3\" >0.7377</td>\n","      <td id=\"T_a6e78_row3_col4\" class=\"data row3 col4\" >0.4801</td>\n","      <td id=\"T_a6e78_row3_col5\" class=\"data row3 col5\" >0.4708</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_a6e78_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n","      <td id=\"T_a6e78_row4_col0\" class=\"data row4 col0\" >5.6800</td>\n","      <td id=\"T_a6e78_row4_col1\" class=\"data row4 col1\" >52.0294</td>\n","      <td id=\"T_a6e78_row4_col2\" class=\"data row4 col2\" >7.2131</td>\n","      <td id=\"T_a6e78_row4_col3\" class=\"data row4 col3\" >0.9228</td>\n","      <td id=\"T_a6e78_row4_col4\" class=\"data row4 col4\" >0.2963</td>\n","      <td id=\"T_a6e78_row4_col5\" class=\"data row4 col5\" >0.2190</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_a6e78_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n","      <td id=\"T_a6e78_row5_col0\" class=\"data row5 col0\" >10.3821</td>\n","      <td id=\"T_a6e78_row5_col1\" class=\"data row5 col1\" >255.9689</td>\n","      <td id=\"T_a6e78_row5_col2\" class=\"data row5 col2\" >15.9990</td>\n","      <td id=\"T_a6e78_row5_col3\" class=\"data row5 col3\" >0.4966</td>\n","      <td id=\"T_a6e78_row5_col4\" class=\"data row5 col4\" >0.2768</td>\n","      <td id=\"T_a6e78_row5_col5\" class=\"data row5 col5\" >0.2011</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_a6e78_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n","      <td id=\"T_a6e78_row6_col0\" class=\"data row6 col0\" >8.9695</td>\n","      <td id=\"T_a6e78_row6_col1\" class=\"data row6 col1\" >235.8743</td>\n","      <td id=\"T_a6e78_row6_col2\" class=\"data row6 col2\" >15.3582</td>\n","      <td id=\"T_a6e78_row6_col3\" class=\"data row6 col3\" >0.2408</td>\n","      <td id=\"T_a6e78_row6_col4\" class=\"data row6 col4\" >0.2589</td>\n","      <td id=\"T_a6e78_row6_col5\" class=\"data row6 col5\" >0.1575</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_a6e78_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n","      <td id=\"T_a6e78_row7_col0\" class=\"data row7 col0\" >6.3850</td>\n","      <td id=\"T_a6e78_row7_col1\" class=\"data row7 col1\" >110.0107</td>\n","      <td id=\"T_a6e78_row7_col2\" class=\"data row7 col2\" >10.4886</td>\n","      <td id=\"T_a6e78_row7_col3\" class=\"data row7 col3\" >0.8392</td>\n","      <td id=\"T_a6e78_row7_col4\" class=\"data row7 col4\" >0.4309</td>\n","      <td id=\"T_a6e78_row7_col5\" class=\"data row7 col5\" >0.3540</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_a6e78_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n","      <td id=\"T_a6e78_row8_col0\" class=\"data row8 col0\" >7.4121</td>\n","      <td id=\"T_a6e78_row8_col1\" class=\"data row8 col1\" >127.6543</td>\n","      <td id=\"T_a6e78_row8_col2\" class=\"data row8 col2\" >11.2984</td>\n","      <td id=\"T_a6e78_row8_col3\" class=\"data row8 col3\" >0.6658</td>\n","      <td id=\"T_a6e78_row8_col4\" class=\"data row8 col4\" >0.1646</td>\n","      <td id=\"T_a6e78_row8_col5\" class=\"data row8 col5\" >0.1099</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_a6e78_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n","      <td id=\"T_a6e78_row9_col0\" class=\"data row9 col0\" >3.9705</td>\n","      <td id=\"T_a6e78_row9_col1\" class=\"data row9 col1\" >45.5314</td>\n","      <td id=\"T_a6e78_row9_col2\" class=\"data row9 col2\" >6.7477</td>\n","      <td id=\"T_a6e78_row9_col3\" class=\"data row9 col3\" >0.8032</td>\n","      <td id=\"T_a6e78_row9_col4\" class=\"data row9 col4\" >0.1415</td>\n","      <td id=\"T_a6e78_row9_col5\" class=\"data row9 col5\" >0.0635</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_a6e78_level0_row10\" class=\"row_heading level0 row10\" >Mean</th>\n","      <td id=\"T_a6e78_row10_col0\" class=\"data row10 col0\" >7.4632</td>\n","      <td id=\"T_a6e78_row10_col1\" class=\"data row10 col1\" >163.2644</td>\n","      <td id=\"T_a6e78_row10_col2\" class=\"data row10 col2\" >12.0349</td>\n","      <td id=\"T_a6e78_row10_col3\" class=\"data row10 col3\" >0.5995</td>\n","      <td id=\"T_a6e78_row10_col4\" class=\"data row10 col4\" >0.2692</td>\n","      <td id=\"T_a6e78_row10_col5\" class=\"data row10 col5\" >0.2004</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_a6e78_level0_row11\" class=\"row_heading level0 row11\" >Std</th>\n","      <td id=\"T_a6e78_row11_col0\" class=\"data row11 col0\" >2.5275</td>\n","      <td id=\"T_a6e78_row11_col1\" class=\"data row11 col1\" >113.5144</td>\n","      <td id=\"T_a6e78_row11_col2\" class=\"data row11 col2\" >4.2925</td>\n","      <td id=\"T_a6e78_row11_col3\" class=\"data row11 col3\" >0.2993</td>\n","      <td id=\"T_a6e78_row11_col4\" class=\"data row11 col4\" >0.1124</td>\n","      <td id=\"T_a6e78_row11_col5\" class=\"data row11 col5\" >0.1209</td>\n","    </tr>\n","  </tbody>\n","</table>\n"],"text/plain":["<pandas.io.formats.style.Styler at 0x27ecabc38b0>"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"","version_major":2,"version_minor":0},"text/plain":["Processing:   0%|          | 0/4 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"}],"source":[" # Creating the ML model based on best models compared above: Extreme Gradient Boosting \n","\n","xgb = create_model('xgboost')"]},{"cell_type":"code","execution_count":null,"id":"af3de45a","metadata":{"colab":{"referenced_widgets":[""]},"id":"af3de45a","outputId":"ab8f77b2-8d3f-4b8e-94c7-8870c979dbc8"},"outputs":[{"data":{"text/html":[],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<style type=\"text/css\">\n","#T_d9336_row10_col0, #T_d9336_row10_col1, #T_d9336_row10_col2, #T_d9336_row10_col3, #T_d9336_row10_col4, #T_d9336_row10_col5 {\n","  background: yellow;\n","}\n","</style>\n","<table id=\"T_d9336\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_d9336_level0_col0\" class=\"col_heading level0 col0\" >MAE</th>\n","      <th id=\"T_d9336_level0_col1\" class=\"col_heading level0 col1\" >MSE</th>\n","      <th id=\"T_d9336_level0_col2\" class=\"col_heading level0 col2\" >RMSE</th>\n","      <th id=\"T_d9336_level0_col3\" class=\"col_heading level0 col3\" >R2</th>\n","      <th id=\"T_d9336_level0_col4\" class=\"col_heading level0 col4\" >RMSLE</th>\n","      <th id=\"T_d9336_level0_col5\" class=\"col_heading level0 col5\" >MAPE</th>\n","    </tr>\n","    <tr>\n","      <th class=\"index_name level0\" >Fold</th>\n","      <th class=\"blank col0\" >&nbsp;</th>\n","      <th class=\"blank col1\" >&nbsp;</th>\n","      <th class=\"blank col2\" >&nbsp;</th>\n","      <th class=\"blank col3\" >&nbsp;</th>\n","      <th class=\"blank col4\" >&nbsp;</th>\n","      <th class=\"blank col5\" >&nbsp;</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_d9336_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n","      <td id=\"T_d9336_row0_col0\" class=\"data row0 col0\" >3.9254</td>\n","      <td id=\"T_d9336_row0_col1\" class=\"data row0 col1\" >33.0246</td>\n","      <td id=\"T_d9336_row0_col2\" class=\"data row0 col2\" >5.7467</td>\n","      <td id=\"T_d9336_row0_col3\" class=\"data row0 col3\" >0.7496</td>\n","      <td id=\"T_d9336_row0_col4\" class=\"data row0 col4\" >0.0693</td>\n","      <td id=\"T_d9336_row0_col5\" class=\"data row0 col5\" >0.0469</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d9336_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n","      <td id=\"T_d9336_row1_col0\" class=\"data row1 col0\" >5.6017</td>\n","      <td id=\"T_d9336_row1_col1\" class=\"data row1 col1\" >59.4290</td>\n","      <td id=\"T_d9336_row1_col2\" class=\"data row1 col2\" >7.7090</td>\n","      <td id=\"T_d9336_row1_col3\" class=\"data row1 col3\" >0.9440</td>\n","      <td id=\"T_d9336_row1_col4\" class=\"data row1 col4\" >0.2774</td>\n","      <td id=\"T_d9336_row1_col5\" class=\"data row1 col5\" >0.1665</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d9336_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n","      <td id=\"T_d9336_row2_col0\" class=\"data row2 col0\" >10.3408</td>\n","      <td id=\"T_d9336_row2_col1\" class=\"data row2 col1\" >247.9189</td>\n","      <td id=\"T_d9336_row2_col2\" class=\"data row2 col2\" >15.7454</td>\n","      <td id=\"T_d9336_row2_col3\" class=\"data row2 col3\" >0.4090</td>\n","      <td id=\"T_d9336_row2_col4\" class=\"data row2 col4\" >0.2480</td>\n","      <td id=\"T_d9336_row2_col5\" class=\"data row2 col5\" >0.1793</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d9336_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n","      <td id=\"T_d9336_row3_col0\" class=\"data row3 col0\" >8.2132</td>\n","      <td id=\"T_d9336_row3_col1\" class=\"data row3 col1\" >198.7430</td>\n","      <td id=\"T_d9336_row3_col2\" class=\"data row3 col2\" >14.0976</td>\n","      <td id=\"T_d9336_row3_col3\" class=\"data row3 col3\" >0.7782</td>\n","      <td id=\"T_d9336_row3_col4\" class=\"data row3 col4\" >0.4074</td>\n","      <td id=\"T_d9336_row3_col5\" class=\"data row3 col5\" >0.3212</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d9336_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n","      <td id=\"T_d9336_row4_col0\" class=\"data row4 col0\" >5.2973</td>\n","      <td id=\"T_d9336_row4_col1\" class=\"data row4 col1\" >78.1196</td>\n","      <td id=\"T_d9336_row4_col2\" class=\"data row4 col2\" >8.8385</td>\n","      <td id=\"T_d9336_row4_col3\" class=\"data row4 col3\" >0.8841</td>\n","      <td id=\"T_d9336_row4_col4\" class=\"data row4 col4\" >0.4076</td>\n","      <td id=\"T_d9336_row4_col5\" class=\"data row4 col5\" >0.3324</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d9336_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n","      <td id=\"T_d9336_row5_col0\" class=\"data row5 col0\" >6.8854</td>\n","      <td id=\"T_d9336_row5_col1\" class=\"data row5 col1\" >116.2291</td>\n","      <td id=\"T_d9336_row5_col2\" class=\"data row5 col2\" >10.7810</td>\n","      <td id=\"T_d9336_row5_col3\" class=\"data row5 col3\" >0.7714</td>\n","      <td id=\"T_d9336_row5_col4\" class=\"data row5 col4\" >0.2183</td>\n","      <td id=\"T_d9336_row5_col5\" class=\"data row5 col5\" >0.1415</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d9336_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n","      <td id=\"T_d9336_row6_col0\" class=\"data row6 col0\" >7.1218</td>\n","      <td id=\"T_d9336_row6_col1\" class=\"data row6 col1\" >117.9324</td>\n","      <td id=\"T_d9336_row6_col2\" class=\"data row6 col2\" >10.8597</td>\n","      <td id=\"T_d9336_row6_col3\" class=\"data row6 col3\" >0.6204</td>\n","      <td id=\"T_d9336_row6_col4\" class=\"data row6 col4\" >0.1669</td>\n","      <td id=\"T_d9336_row6_col5\" class=\"data row6 col5\" >0.1019</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d9336_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n","      <td id=\"T_d9336_row7_col0\" class=\"data row7 col0\" >5.7067</td>\n","      <td id=\"T_d9336_row7_col1\" class=\"data row7 col1\" >76.3875</td>\n","      <td id=\"T_d9336_row7_col2\" class=\"data row7 col2\" >8.7400</td>\n","      <td id=\"T_d9336_row7_col3\" class=\"data row7 col3\" >0.8883</td>\n","      <td id=\"T_d9336_row7_col4\" class=\"data row7 col4\" >0.4294</td>\n","      <td id=\"T_d9336_row7_col5\" class=\"data row7 col5\" >0.3801</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d9336_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n","      <td id=\"T_d9336_row8_col0\" class=\"data row8 col0\" >7.7671</td>\n","      <td id=\"T_d9336_row8_col1\" class=\"data row8 col1\" >157.8263</td>\n","      <td id=\"T_d9336_row8_col2\" class=\"data row8 col2\" >12.5629</td>\n","      <td id=\"T_d9336_row8_col3\" class=\"data row8 col3\" >0.5868</td>\n","      <td id=\"T_d9336_row8_col4\" class=\"data row8 col4\" >0.1853</td>\n","      <td id=\"T_d9336_row8_col5\" class=\"data row8 col5\" >0.1235</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d9336_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n","      <td id=\"T_d9336_row9_col0\" class=\"data row9 col0\" >4.6100</td>\n","      <td id=\"T_d9336_row9_col1\" class=\"data row9 col1\" >47.8421</td>\n","      <td id=\"T_d9336_row9_col2\" class=\"data row9 col2\" >6.9168</td>\n","      <td id=\"T_d9336_row9_col3\" class=\"data row9 col3\" >0.7932</td>\n","      <td id=\"T_d9336_row9_col4\" class=\"data row9 col4\" >0.1504</td>\n","      <td id=\"T_d9336_row9_col5\" class=\"data row9 col5\" >0.0683</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d9336_level0_row10\" class=\"row_heading level0 row10\" >Mean</th>\n","      <td id=\"T_d9336_row10_col0\" class=\"data row10 col0\" >6.5469</td>\n","      <td id=\"T_d9336_row10_col1\" class=\"data row10 col1\" >113.3452</td>\n","      <td id=\"T_d9336_row10_col2\" class=\"data row10 col2\" >10.1998</td>\n","      <td id=\"T_d9336_row10_col3\" class=\"data row10 col3\" >0.7425</td>\n","      <td id=\"T_d9336_row10_col4\" class=\"data row10 col4\" >0.2560</td>\n","      <td id=\"T_d9336_row10_col5\" class=\"data row10 col5\" >0.1862</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d9336_level0_row11\" class=\"row_heading level0 row11\" >Std</th>\n","      <td id=\"T_d9336_row11_col0\" class=\"data row11 col0\" >1.8135</td>\n","      <td id=\"T_d9336_row11_col1\" class=\"data row11 col1\" >66.0806</td>\n","      <td id=\"T_d9336_row11_col2\" class=\"data row11 col2\" >3.0512</td>\n","      <td id=\"T_d9336_row11_col3\" class=\"data row11 col3\" >0.1539</td>\n","      <td id=\"T_d9336_row11_col4\" class=\"data row11 col4\" >0.1170</td>\n","      <td id=\"T_d9336_row11_col5\" class=\"data row11 col5\" >0.1114</td>\n","    </tr>\n","  </tbody>\n","</table>\n"],"text/plain":["<pandas.io.formats.style.Styler at 0x27eca898370>"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"","version_major":2,"version_minor":0},"text/plain":["Processing:   0%|          | 0/7 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["Fitting 10 folds for each of 50 candidates, totalling 500 fits\n"]}],"source":["tuned_xgb = tune_model(xgb, choose_better = True, n_iter = 50)"]},{"cell_type":"code","execution_count":null,"id":"8d63e086","metadata":{"id":"8d63e086","outputId":"eb382941-a31e-43c4-9c40-c4d250328b79"},"outputs":[{"data":{"text/html":[],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"\n","text/plain":["<Figure size 800x550 with 2 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Plotting prediction accuracy of XGB\n","\n","plot_model(tuned_xgb)"]},{"cell_type":"code","execution_count":null,"id":"47f1f0cd","metadata":{"id":"47f1f0cd","outputId":"062e5b30-c226-435a-a49c-2383e4592057"},"outputs":[{"data":{"text/html":[],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"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bz5G1tpyU7VqVebMmcPLL7/M0KFDOXv2LF9//TUVK1a02O+nn37ikUceyfM2w8KFC/O8ziaTiTt37rB06VIqV65Mr169ct034zrdunWLTz75hKSkJJ544gnza8uXL2fx4sWMHDmSN954g7CwMD7++GNu3rzJvHnzANi6dSuvv/46gwYN4o033uDkyZOMHz8eo9Focd6c/j527NjB1KlT6du3L6+88grXr19n8eLFnD9/nq+++gqVSsXcuXM5ePAg06dPp3Llyhw4cICFCxdSoUIFBg4cyM6dO1m4cCHTp08nICCAixcvsnDhQlJSUliwYAGKovDCCy9w/PhxJkyYQKNGjThy5AgfffQRV69eZc6cOeYas/77FXZCEaKEjBw5UhkxYoSi1+vN/925c0fZtWuX0qZNG2Xw4MGKyWQy79u0aVMlKSnJ/P6DBw8q/v7+ys6dOy2OO3XqVKVDhw6KXq9X4uLilCZNmigLFiyw2OfZZ59V/P39latXryqKoihLly5V/P39FUVRFKPRqLRv316ZMGGCxXu++uorpV+/fkpqaqqyefNmi/criqJ06dJFmT59uqIoirJ69WrF399fOXbsmMUxZsyYoQQGBiqxsbHm93Tp0kUxGAzmfT7++GPF399fiYmJyfPa+fv75/rf1q1bLep67LHHFKPRaN52+PBhxd/fX/nwww/N24xGo9KhQwfl6aeftjjX5cuXlSZNmijvv/++oiiK+WffsGFDrvXldE0URVGeeuoppWfPnhY/b1xcnNKmTRtl0qRJudaWH5MmTVL8/f2Vd999N9tr9+7dU/z9/bN9DhRFsfj86fV6i9q6dOmS4/UNCAhQtm/fbnGc3P5OAgIClL59+yo//vijed/4+HilWbNmyltvvWVxjA0bNij+/v5KRESEoiiK8thjjynjxo2z2Gf58uWKv7+/snnzZkVRcv77MJlMSqdOnZRnn33W4r2HDh1S/P39lZ9//llRFEUJCQlRZs6cabHPsmXLlP/973+KoijKrFmzlB49elh8drZt26asWrVKURRF+eWXXxR/f39l27ZtFsf45JNPFH9/f+XcuXPma5P136+wD9LSFyXq6NGjNGnSxGKbWq2mXbt2zJkzx6K1WqtWLYsBan/88QcqlYrOnTtbtK66du3K9u3bOXfuHLdv30av19OtWzeLc/Tq1Yvffvstx5ou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b29WrlzJ7t27adu2LW+++SZvvvmmTZaxNRgMfPLJJ9nueTVp0gQPD48Sryc/ZKU9IbKLTtDx64UotLm05LVqNQcuRBOd4DgDBovTiBEjCAgIICAggKZNm9KrVy+Lh4dldurUKRRFoXr16sVe1+rVq+natSuBgYEMHDiQY8eO5bpv165dzT9D5v9mz56d72MmJiYyd+5cunTpwsMPP8zQoUNtOn3cYbv3x4wZw5gxY3J9PTAwkHXr1pVgRdklJiby7LPPsm/fPkJDQ1mxYoXdD4CTwBciZ2tDI81d+rkxmEysDY1kUqdGJViZ/VEUhbCwMKZPn07fvn1JSUnh22+/Zfr06TRv3pzatWub942NjWX69Om89957xV7Xrl27mD9/Pm+//TYtWrRg3bp1PPfcc+zcuZMaNWpk23/Tpk0WsxLOnTvHmDFjLMYePOiYb775JufOneP999/Hx8eH7du3M2bMGHbt2mWTnl77TiAHFhUVRd++fdm3bx8AO3bs4J9//rFxVXlTFIU///xTAl+IHMSlpOUZ+JDe1R+foi+hivInOkHHkgNhvLv3BEsOhJVIT0RkZCRJSUk8+uijVKlShdq1a/PUU09hNBq5dOmSeb+0tDReeuklnn/+eVq0aFHsdX311Vc8+eSTDBo0iPr16zNz5kyqVavG2rVrc9y/YsWKVKlSxfzfzz//TJ06dWjTpk2+jpmSksLevXt57bXXaN26NQ899BAvv/wytWrVYs2aNcX+8+bEYVv69uzs2bMMHjyYq1evAlC+fHm+++47Hn74YRtXljeVSsWgQYNYv349Pj4+EvhCZOLl6oxJybulb1IUyrs6lWBVuctt0OGO01etOugwJ6dPn8bLy8s8A+rWrVssXrwYZ2dnAgICgPRGxuuvv84jjzxC//79833szz//nOXLl+e5zxdffEGrVq0stqWlpXH69Gmef/55i+0dOnQgNDT0gedNS0szt9Izfi8+6JgGgwGj0YiLi4vF666urvz9998PPGdxkNC3skOHDjFixAjzgJRatWqxfv1684AVe+fm5sawYcNwdnaWwBcik2FBvuw4fZX769HkSKtWMyzIt8RqykvGoEOtWp3joEOAWT2aFcu5T58+TUJCAi1atDAvNOPq6srs2bPNXdp//fUXu3btIiAggP379wPw/vvvm78U5Gbo0KH06tUrz31y6jaP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\n","text/plain":["<Figure size 800x550 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plot_model(tuned_xgb, plot = 'error')"]},{"cell_type":"code","execution_count":null,"id":"1142772f","metadata":{"id":"1142772f"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"id":"7e194639","metadata":{"id":"7e194639","outputId":"5c4898c7-077b-4271-f8a9-de07a34f692a"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 800x950 with 2 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["interpret_model(tuned_xgb)"]},{"cell_type":"code","execution_count":null,"id":"bff69e5a","metadata":{"scrolled":true,"id":"bff69e5a"},"outputs":[],"source":["# Creating the ML model based on best models compared above: Random Forest\n","    \n","rf = create_model('rf')"]},{"cell_type":"code","execution_count":null,"id":"447c53a8","metadata":{"id":"447c53a8"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"id":"c9cacd68","metadata":{"id":"c9cacd68"},"outputs":[],"source":["# Plotting prediction accuracy of XGB\n","\n","plot_model(xgb)"]},{"cell_type":"code","execution_count":null,"id":"0c5445ae","metadata":{"id":"0c5445ae"},"outputs":[],"source":["# Plotting prediction accuracy of RF\n","\n","plot_model(rf)"]},{"cell_type":"code","execution_count":null,"id":"7a34ab62","metadata":{"id":"7a34ab62"},"outputs":[],"source":["plot_model(rf, plot = 'error')"]},{"cell_type":"code","execution_count":null,"id":"6778cac6","metadata":{"id":"6778cac6"},"outputs":[],"source":["interpret_model(rf)"]},{"cell_type":"code","execution_count":null,"id":"644d11be","metadata":{"id":"644d11be"},"outputs":[],"source":["svr = create_model('svm')"]},{"cell_type":"code","execution_count":null,"id":"75542fd2","metadata":{"id":"75542fd2"},"outputs":[],"source":["# Plotting prediction accuracy of SVR\n","\n","plot_model(svr)"]},{"cell_type":"code","execution_count":null,"id":"ab72c362","metadata":{"id":"ab72c362"},"outputs":[],"source":["! pip install shap\n","interpret_model(rf)\n"]},{"cell_type":"code","execution_count":null,"id":"d593fcb4","metadata":{"id":"d593fcb4"},"outputs":[],"source":["plot_model(svr, plot = 'error')"]},{"cell_type":"code","execution_count":null,"id":"c965575a","metadata":{"id":"c965575a"},"outputs":[],"source":["plot_model(gbr, plot = 'feature')"]},{"cell_type":"code","execution_count":null,"id":"51e0a53d","metadata":{"id":"51e0a53d"},"outputs":[],"source":["plot_model(rf, plot = 'feature')"]},{"cell_type":"code","execution_count":null,"id":"c33d111d","metadata":{"id":"c33d111d","outputId":"3d236e71-0adf-4f0e-a1c7-9c38994d1c67"},"outputs":[{"name":"stdout","output_type":"stream","text":["Running on local URL:  http://127.0.0.1:7860\n","\n","To create a public link, set `share=True` in `launch()`.\n"]},{"data":{"text/html":["<div><iframe src=\"http://127.0.0.1:7860/\" width=\"100%\" height=\"500\" allow=\"autoplay; camera; microphone; clipboard-read; clipboard-write;\" frameborder=\"0\" allowfullscreen></iframe></div>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{},"output_type":"display_data"},{"data":{"text/plain":[]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["create_app(gbr)\n","#launch(share=True)"]},{"cell_type":"code","execution_count":null,"id":"8e494e08","metadata":{"id":"8e494e08","outputId":"b15a1133-ed7e-4d80-e4f0-2838560eb6f7"},"outputs":[{"name":"stdout","output_type":"stream","text":["Requirement already satisfied: streamlit in c:\\users\\mj943\\anaconda3\\lib\\site-packages (1.22.0)\n","Requirement already satisfied: requests>=2.4 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (2.28.1)\n","Requirement already satisfied: cachetools>=4.0 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (5.3.0)\n","Requirement already satisfied: pympler>=0.9 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (1.0.1)\n","Requirement already satisfied: python-dateutil in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (2.8.2)\n","Requirement already satisfied: altair<5,>=3.2.0 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (4.2.2)\n","Requirement already satisfied: pydeck>=0.1.dev5 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (0.8.1b0)\n","Requirement already satisfied: pillow>=6.2.0 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (9.2.0)\n","Requirement already satisfied: watchdog in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (2.1.6)\n","Requirement already satisfied: tenacity<9,>=8.0.0 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (8.0.1)\n","Requirement already satisfied: tornado>=6.0.3 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (6.1)\n","Requirement already satisfied: click>=7.0 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (8.0.4)\n","Requirement already satisfied: rich>=10.11.0 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (13.3.5)\n","Requirement already satisfied: tzlocal>=1.1 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (4.3)\n","Requirement already satisfied: blinker>=1.0.0 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (1.6.2)\n","Requirement already satisfied: packaging>=14.1 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (21.3)\n","Requirement already satisfied: numpy in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (1.21.5)\n","Requirement already satisfied: toml in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (0.10.2)\n","Requirement already satisfied: pyarrow>=4.0 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (11.0.0)\n","Requirement already satisfied: validators>=0.2 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (0.20.0)\n","Requirement already satisfied: gitpython!=3.1.19 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (3.1.31)\n","Requirement already satisfied: importlib-metadata>=1.4 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (6.1.0)\n","Requirement already satisfied: protobuf<4,>=3.12 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (3.20.3)\n","Requirement already satisfied: pandas<3,>=0.25 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (1.4.4)\n","Requirement already satisfied: typing-extensions>=3.10.0.0 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from streamlit) (4.3.0)\n","Requirement already satisfied: jsonschema>=3.0 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from altair<5,>=3.2.0->streamlit) (4.16.0)\n","Requirement already satisfied: toolz in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from altair<5,>=3.2.0->streamlit) (0.11.2)\n","Requirement already satisfied: jinja2 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from altair<5,>=3.2.0->streamlit) (2.11.3)\n","Requirement already satisfied: entrypoints in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from altair<5,>=3.2.0->streamlit) (0.4)\n","Requirement already satisfied: colorama in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from click>=7.0->streamlit) (0.4.5)\n","Requirement already satisfied: gitdb<5,>=4.0.1 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from gitpython!=3.1.19->streamlit) (4.0.10)\n","Requirement already satisfied: zipp>=0.5 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from importlib-metadata>=1.4->streamlit) (3.8.0)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from packaging>=14.1->streamlit) (3.0.9)\n","Requirement already satisfied: pytz>=2020.1 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from pandas<3,>=0.25->streamlit) (2022.1)\n","Requirement already satisfied: six>=1.5 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from python-dateutil->streamlit) (1.16.0)\n","Requirement already satisfied: idna<4,>=2.5 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from requests>=2.4->streamlit) (3.3)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from requests>=2.4->streamlit) (1.26.11)\n","Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from requests>=2.4->streamlit) (2022.9.14)\n","Requirement already satisfied: charset-normalizer<3,>=2 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from requests>=2.4->streamlit) (2.0.4)\n","Requirement already satisfied: markdown-it-py<3.0.0,>=2.2.0 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from rich>=10.11.0->streamlit) (2.2.0)\n","Requirement already satisfied: pygments<3.0.0,>=2.13.0 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from rich>=10.11.0->streamlit) (2.15.1)\n","Requirement already satisfied: pytz-deprecation-shim in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from tzlocal>=1.1->streamlit) (0.1.0.post0)\n","Requirement already satisfied: tzdata in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from tzlocal>=1.1->streamlit) (2023.3)\n","Requirement already satisfied: decorator>=3.4.0 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from validators>=0.2->streamlit) (5.1.1)\n","Requirement already satisfied: smmap<6,>=3.0.1 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19->streamlit) (5.0.0)\n","Requirement already satisfied: MarkupSafe>=0.23 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from jinja2->altair<5,>=3.2.0->streamlit) (2.0.1)\n","Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from jsonschema>=3.0->altair<5,>=3.2.0->streamlit) (0.18.0)\n","Requirement already satisfied: attrs>=17.4.0 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from jsonschema>=3.0->altair<5,>=3.2.0->streamlit) (21.4.0)\n","Requirement already satisfied: mdurl~=0.1 in c:\\users\\mj943\\anaconda3\\lib\\site-packages (from markdown-it-py<3.0.0,>=2.2.0->rich>=10.11.0->streamlit) (0.1.2)\n"]},{"name":"stderr","output_type":"stream","text":["WARNING: Ignoring invalid distribution -tatsmodels (c:\\users\\mj943\\anaconda3\\lib\\site-packages)\n","WARNING: Ignoring invalid distribution -tatsmodels (c:\\users\\mj943\\anaconda3\\lib\\site-packages)\n","WARNING: Ignoring invalid distribution -tatsmodels (c:\\users\\mj943\\anaconda3\\lib\\site-packages)\n","WARNING: Ignoring invalid distribution -tatsmodels (c:\\users\\mj943\\anaconda3\\lib\\site-packages)\n","WARNING: Ignoring invalid distribution -tatsmodels (c:\\users\\mj943\\anaconda3\\lib\\site-packages)\n","WARNING: Ignoring invalid distribution -tatsmodels (c:\\users\\mj943\\anaconda3\\lib\\site-packages)\n"]}],"source":["! pip install streamlit\n","\n"]},{"cell_type":"code","execution_count":null,"id":"f27e0fe7","metadata":{"scrolled":false,"colab":{"referenced_widgets":["91aacdd2bced4c9689d03ab3fe489f14"]},"id":"f27e0fe7","outputId":"8c38ca0b-0f0e-453e-9267-a5997402d7df"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"91aacdd2bced4c9689d03ab3fe489f14","version_major":2,"version_minor":0},"text/plain":["interactive(children=(ToggleButtons(description='Plot Type:', icons=('',), options=(('Pipeline Plot', 'pipelin…"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"\n","text/plain":["<Figure size 3200x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["evaluate_model(tuned_xgb)\n"]},{"cell_type":"code","execution_count":null,"id":"0d2ee86d","metadata":{"id":"0d2ee86d"},"outputs":[],"source":["! pip install gradio"]},{"cell_type":"code","execution_count":null,"id":"74d458d7","metadata":{"id":"74d458d7"},"outputs":[],"source":["pip install pycaret[mlops]"]},{"cell_type":"code","execution_count":null,"id":"3fdf4618","metadata":{"id":"3fdf4618"},"outputs":[],"source":[]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.13"},"colab":{"provenance":[{"file_id":"16C4jygqwsVpp0-8PMPAiokyTmh0V1IIF","timestamp":1683900045122}]},"widgets":{"application/vnd.jupyter.widget-state+json":{"d9667e2eac2240c0b673555323c894ee":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4e17f15bb2b34318ad90c6996d354c42","IPY_MODEL_2abb000c93f447ecb815fe2a55942901","IPY_MODEL_383e197970fe4cbcb3622364add288fc"],"layout":"IPY_MODEL_12e0b4c8f9234a4f97f179c0f16e9322"}},"4e17f15bb2b34318ad90c6996d354c42":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0a698acddf4a4e38868d8d3126aeedca","placeholder":"​","style":"IPY_MODEL_3263746d203c471e8683fae5e61f75ea","value":"Processing: 100%"}},"2abb000c93f447ecb815fe2a55942901":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_5f1c700a1aa94effa9f70bc6e7ee3bb8","max":4,"min":0,"orientation":"horizontal","style":"IPY_MODEL_65bc9b4b6c8542e6a81ba4bf4f7adee2","value":4}},"383e197970fe4cbcb3622364add288fc":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_72043642b86a4c5d931c4d546350c228","placeholder":"​","style":"IPY_MODEL_d88df7bfaf464268b5533b0ee5018b37","value":" 4/4 [00:09&lt;00:00,  2.09s/it]"}},"12e0b4c8f9234a4f97f179c0f16e9322":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"0a698acddf4a4e38868d8d3126aeedca":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3263746d203c471e8683fae5e61f75ea":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5f1c700a1aa94effa9f70bc6e7ee3bb8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"65bc9b4b6c8542e6a81ba4bf4f7adee2":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"72043642b86a4c5d931c4d546350c228":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d88df7bfaf464268b5533b0ee5018b37":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":5}